/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers } from "ethers";
import {
  FactoryOptions,
  HardhatEthersHelpers as HardhatEthersHelpersBase,
} from "@nomiclabs/hardhat-ethers/types";

import * as Contracts from ".";

declare module "hardhat/types/runtime" {
  interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
    getContractFactory(
      name: "ChainlinkClient",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ChainlinkClient__factory>;
    getContractFactory(
      name: "ChainlinkRequestInterface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ChainlinkRequestInterface__factory>;
    getContractFactory(
      name: "ENSInterface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ENSInterface__factory>;
    getContractFactory(
      name: "LinkTokenInterface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LinkTokenInterface__factory>;
    getContractFactory(
      name: "OperatorInterface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OperatorInterface__factory>;
    getContractFactory(
      name: "OracleInterface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OracleInterface__factory>;
    getContractFactory(
      name: "PointerInterface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PointerInterface__factory>;
    getContractFactory(
      name: "ENSResolver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ENSResolver__factory>;
    getContractFactory(
      name: "Ownable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Ownable__factory>;
    getContractFactory(
      name: "Initializable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Initializable__factory>;
    getContractFactory(
      name: "Pausable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Pausable__factory>;
    getContractFactory(
      name: "ERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20__factory>;
    getContractFactory(
      name: "IERC20Permit",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20Permit__factory>;
    getContractFactory(
      name: "IERC20Metadata",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20Metadata__factory>;
    getContractFactory(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20__factory>;
    getContractFactory(
      name: "IERC721Enumerable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Enumerable__factory>;
    getContractFactory(
      name: "IERC721Metadata",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Metadata__factory>;
    getContractFactory(
      name: "IERC721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721__factory>;
    getContractFactory(
      name: "IERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC165__factory>;
    getContractFactory(
      name: "IERC721Permit",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Permit__factory>;
    getContractFactory(
      name: "IPeripheryImmutableState",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPeripheryImmutableState__factory>;
    getContractFactory(
      name: "IPeripheryPayments",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPeripheryPayments__factory>;
    getContractFactory(
      name: "IPoolInitializer",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPoolInitializer__factory>;
    getContractFactory(
      name: "Affiliate",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Affiliate__factory>;
    getContractFactory(
      name: "BlxToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BlxToken__factory>;
    getContractFactory(
      name: "Formulas",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Formulas__factory>;
    getContractFactory(
      name: "HistoryVolatility",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.HistoryVolatility__factory>;
    getContractFactory(
      name: "IOptionAmerican",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IOptionAmerican__factory>;
    getContractFactory(
      name: "IOptionBinary",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IOptionBinary__factory>;
    getContractFactory(
      name: "AccessContract",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AccessContract__factory>;
    getContractFactory(
      name: "IAccessContract",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAccessContract__factory>;
    getContractFactory(
      name: "IAffiliate",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAffiliate__factory>;
    getContractFactory(
      name: "IAffiliateNew",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAffiliateNew__factory>;
    getContractFactory(
      name: "IBlxToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IBlxToken__factory>;
    getContractFactory(
      name: "IBroker",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IBroker__factory>;
    getContractFactory(
      name: "ChangeReward",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ChangeReward__factory>;
    getContractFactory(
      name: "IChangeReward",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IChangeReward__factory>;
    getContractFactory(
      name: "IFormulas",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IFormulas__factory>;
    getContractFactory(
      name: "ISimpleOracle",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ISimpleOracle__factory>;
    getContractFactory(
      name: "IStaking",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IStaking__factory>;
    getContractFactory(
      name: "IStakingContract",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IStakingContract__factory>;
    getContractFactory(
      name: "ITreasury",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ITreasury__factory>;
    getContractFactory(
      name: "IBlxPresale",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IBlxPresale__factory>;
    getContractFactory(
      name: "IKYC",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IKYC__factory>;
    getContractFactory(
      name: "KYCState",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.KYCState__factory>;
    getContractFactory(
      name: "INonfungiblePositionManager",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.INonfungiblePositionManager__factory>;
    getContractFactory(
      name: "IRewardsDistributionRecipient",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IRewardsDistributionRecipient__factory>;
    getContractFactory(
      name: "IStakingRewards",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IStakingRewards__factory>;
    getContractFactory(
      name: "IDoubleTouch",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IDoubleTouch__factory>;
    getContractFactory(
      name: "ITouch",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ITouch__factory>;
    getContractFactory(
      name: "ITurbo",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ITurbo__factory>;
    getContractFactory(
      name: "MockAbdk",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockAbdk__factory>;
    getContractFactory(
      name: "MockOracle",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockOracle__factory>;
    getContractFactory(
      name: "Mocktion",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Mocktion__factory>;
    getContractFactory(
      name: "OptionAmerican",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OptionAmerican__factory>;
    getContractFactory(
      name: "OptionBinary",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OptionBinary__factory>;
    getContractFactory(
      name: "ChainlinkUtils",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ChainlinkUtils__factory>;
    getContractFactory(
      name: "OptionBase",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OptionBase__factory>;
    getContractFactory(
      name: "OptionLib",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OptionLib__factory>;
    getContractFactory(
      name: "DoubleNoTouch",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DoubleNoTouch__factory>;
    getContractFactory(
      name: "DoubleTouch",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DoubleTouch__factory>;
    getContractFactory(
      name: "OptionNoTouch",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OptionNoTouch__factory>;
    getContractFactory(
      name: "OptionTouch",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OptionTouch__factory>;
    getContractFactory(
      name: "Turbo",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Turbo__factory>;
    getContractFactory(
      name: "BlxPresale",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BlxPresale__factory>;
    getContractFactory(
      name: "IBCO",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IBCO__factory>;
    getContractFactory(
      name: "KYC",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.KYC__factory>;
    getContractFactory(
      name: "Uniswap3ListingMaker",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Uniswap3ListingMaker__factory>;
    getContractFactory(
      name: "SimpleOracle",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SimpleOracle__factory>;
    getContractFactory(
      name: "StakingContract",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.StakingContract__factory>;
    getContractFactory(
      name: "RewardsDistributionRecipient",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.RewardsDistributionRecipient__factory>;
    getContractFactory(
      name: "StakingRewards",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.StakingRewards__factory>;
    getContractFactory(
      name: "TestERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestERC20__factory>;
    getContractFactory(
      name: "Treasury",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Treasury__factory>;
    getContractFactory(
      name: "USDC",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.USDC__factory>;
    getContractFactory(
      name: "Abdk",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Abdk__factory>;
    getContractFactory(
      name: "Multicall",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Multicall__factory>;
    getContractFactory(
      name: "Multicall2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Multicall2__factory>;

    getContractAt(
      name: "ChainlinkClient",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ChainlinkClient>;
    getContractAt(
      name: "ChainlinkRequestInterface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ChainlinkRequestInterface>;
    getContractAt(
      name: "ENSInterface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ENSInterface>;
    getContractAt(
      name: "LinkTokenInterface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.LinkTokenInterface>;
    getContractAt(
      name: "OperatorInterface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.OperatorInterface>;
    getContractAt(
      name: "OracleInterface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.OracleInterface>;
    getContractAt(
      name: "PointerInterface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PointerInterface>;
    getContractAt(
      name: "ENSResolver",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ENSResolver>;
    getContractAt(
      name: "Ownable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Ownable>;
    getContractAt(
      name: "Initializable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Initializable>;
    getContractAt(
      name: "Pausable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Pausable>;
    getContractAt(
      name: "ERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20>;
    getContractAt(
      name: "IERC20Permit",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20Permit>;
    getContractAt(
      name: "IERC20Metadata",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20Metadata>;
    getContractAt(
      name: "IERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20>;
    getContractAt(
      name: "IERC721Enumerable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Enumerable>;
    getContractAt(
      name: "IERC721Metadata",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Metadata>;
    getContractAt(
      name: "IERC721",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721>;
    getContractAt(
      name: "IERC165",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC165>;
    getContractAt(
      name: "IERC721Permit",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Permit>;
    getContractAt(
      name: "IPeripheryImmutableState",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IPeripheryImmutableState>;
    getContractAt(
      name: "IPeripheryPayments",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IPeripheryPayments>;
    getContractAt(
      name: "IPoolInitializer",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IPoolInitializer>;
    getContractAt(
      name: "Affiliate",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Affiliate>;
    getContractAt(
      name: "BlxToken",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BlxToken>;
    getContractAt(
      name: "Formulas",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Formulas>;
    getContractAt(
      name: "HistoryVolatility",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.HistoryVolatility>;
    getContractAt(
      name: "IOptionAmerican",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IOptionAmerican>;
    getContractAt(
      name: "IOptionBinary",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IOptionBinary>;
    getContractAt(
      name: "AccessContract",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AccessContract>;
    getContractAt(
      name: "IAccessContract",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IAccessContract>;
    getContractAt(
      name: "IAffiliate",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IAffiliate>;
    getContractAt(
      name: "IAffiliateNew",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IAffiliateNew>;
    getContractAt(
      name: "IBlxToken",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IBlxToken>;
    getContractAt(
      name: "IBroker",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IBroker>;
    getContractAt(
      name: "ChangeReward",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ChangeReward>;
    getContractAt(
      name: "IChangeReward",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IChangeReward>;
    getContractAt(
      name: "IFormulas",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IFormulas>;
    getContractAt(
      name: "ISimpleOracle",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ISimpleOracle>;
    getContractAt(
      name: "IStaking",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IStaking>;
    getContractAt(
      name: "IStakingContract",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IStakingContract>;
    getContractAt(
      name: "ITreasury",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ITreasury>;
    getContractAt(
      name: "IBlxPresale",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IBlxPresale>;
    getContractAt(
      name: "IKYC",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IKYC>;
    getContractAt(
      name: "KYCState",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.KYCState>;
    getContractAt(
      name: "INonfungiblePositionManager",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.INonfungiblePositionManager>;
    getContractAt(
      name: "IRewardsDistributionRecipient",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IRewardsDistributionRecipient>;
    getContractAt(
      name: "IStakingRewards",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IStakingRewards>;
    getContractAt(
      name: "IDoubleTouch",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IDoubleTouch>;
    getContractAt(
      name: "ITouch",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ITouch>;
    getContractAt(
      name: "ITurbo",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ITurbo>;
    getContractAt(
      name: "MockAbdk",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MockAbdk>;
    getContractAt(
      name: "MockOracle",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MockOracle>;
    getContractAt(
      name: "Mocktion",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Mocktion>;
    getContractAt(
      name: "OptionAmerican",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.OptionAmerican>;
    getContractAt(
      name: "OptionBinary",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.OptionBinary>;
    getContractAt(
      name: "ChainlinkUtils",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ChainlinkUtils>;
    getContractAt(
      name: "OptionBase",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.OptionBase>;
    getContractAt(
      name: "OptionLib",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.OptionLib>;
    getContractAt(
      name: "DoubleNoTouch",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.DoubleNoTouch>;
    getContractAt(
      name: "DoubleTouch",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.DoubleTouch>;
    getContractAt(
      name: "OptionNoTouch",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.OptionNoTouch>;
    getContractAt(
      name: "OptionTouch",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.OptionTouch>;
    getContractAt(
      name: "Turbo",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Turbo>;
    getContractAt(
      name: "BlxPresale",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BlxPresale>;
    getContractAt(
      name: "IBCO",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IBCO>;
    getContractAt(
      name: "KYC",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.KYC>;
    getContractAt(
      name: "Uniswap3ListingMaker",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Uniswap3ListingMaker>;
    getContractAt(
      name: "SimpleOracle",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SimpleOracle>;
    getContractAt(
      name: "StakingContract",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.StakingContract>;
    getContractAt(
      name: "RewardsDistributionRecipient",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.RewardsDistributionRecipient>;
    getContractAt(
      name: "StakingRewards",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.StakingRewards>;
    getContractAt(
      name: "TestERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TestERC20>;
    getContractAt(
      name: "Treasury",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Treasury>;
    getContractAt(
      name: "USDC",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.USDC>;
    getContractAt(
      name: "Abdk",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Abdk>;
    getContractAt(
      name: "Multicall",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Multicall>;
    getContractAt(
      name: "Multicall2",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Multicall2>;

    // default types
    getContractFactory(
      name: string,
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<ethers.ContractFactory>;
    getContractFactory(
      abi: any[],
      bytecode: ethers.utils.BytesLike,
      signer?: ethers.Signer
    ): Promise<ethers.ContractFactory>;
    getContractAt(
      nameOrAbi: string | any[],
      address: string,
      signer?: ethers.Signer
    ): Promise<ethers.Contract>;
  }
}
