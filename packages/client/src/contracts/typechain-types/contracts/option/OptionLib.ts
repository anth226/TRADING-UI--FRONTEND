/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumber,
  BytesLike,
  CallOverrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import type { FunctionFragment, Result } from "@ethersproject/abi";
import type { Listener, Provider } from "@ethersproject/providers";
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
  PromiseOrValue,
} from "../../common";

export interface OptionLibInterface extends utils.Interface {
  functions: {
    "OPTION_AMERICAN()": FunctionFragment;
    "OPTION_DIGITAL()": FunctionFragment;
    "OPTION_FIRST()": FunctionFragment;
    "OPTION_LAST()": FunctionFragment;
    "OPTION_TURBO()": FunctionFragment;
    "OPTION_TYPE_CALL()": FunctionFragment;
    "OPTION_TYPE_NA()": FunctionFragment;
    "OPTION_TYPE_PUT()": FunctionFragment;
    "PRODUCT_AMERICAN()": FunctionFragment;
    "PRODUCT_BINARY()": FunctionFragment;
    "PRODUCT_DOUBLE_NO_TOUCH()": FunctionFragment;
    "PRODUCT_DOUBLE_TOUCH()": FunctionFragment;
    "PRODUCT_FIRST()": FunctionFragment;
    "PRODUCT_LAST()": FunctionFragment;
    "PRODUCT_NO_TOUCH()": FunctionFragment;
    "PRODUCT_TOUCH()": FunctionFragment;
    "PRODUCT_TURBOS()": FunctionFragment;
  };

  getFunction(
    nameOrSignatureOrTopic:
      | "OPTION_AMERICAN"
      | "OPTION_DIGITAL"
      | "OPTION_FIRST"
      | "OPTION_LAST"
      | "OPTION_TURBO"
      | "OPTION_TYPE_CALL"
      | "OPTION_TYPE_NA"
      | "OPTION_TYPE_PUT"
      | "PRODUCT_AMERICAN"
      | "PRODUCT_BINARY"
      | "PRODUCT_DOUBLE_NO_TOUCH"
      | "PRODUCT_DOUBLE_TOUCH"
      | "PRODUCT_FIRST"
      | "PRODUCT_LAST"
      | "PRODUCT_NO_TOUCH"
      | "PRODUCT_TOUCH"
      | "PRODUCT_TURBOS"
  ): FunctionFragment;

  encodeFunctionData(
    functionFragment: "OPTION_AMERICAN",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "OPTION_DIGITAL",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "OPTION_FIRST",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "OPTION_LAST",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "OPTION_TURBO",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "OPTION_TYPE_CALL",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "OPTION_TYPE_NA",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "OPTION_TYPE_PUT",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "PRODUCT_AMERICAN",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "PRODUCT_BINARY",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "PRODUCT_DOUBLE_NO_TOUCH",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "PRODUCT_DOUBLE_TOUCH",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "PRODUCT_FIRST",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "PRODUCT_LAST",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "PRODUCT_NO_TOUCH",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "PRODUCT_TOUCH",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "PRODUCT_TURBOS",
    values?: undefined
  ): string;

  decodeFunctionResult(
    functionFragment: "OPTION_AMERICAN",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "OPTION_DIGITAL",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "OPTION_FIRST",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "OPTION_LAST",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "OPTION_TURBO",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "OPTION_TYPE_CALL",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "OPTION_TYPE_NA",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "OPTION_TYPE_PUT",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "PRODUCT_AMERICAN",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "PRODUCT_BINARY",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "PRODUCT_DOUBLE_NO_TOUCH",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "PRODUCT_DOUBLE_TOUCH",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "PRODUCT_FIRST",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "PRODUCT_LAST",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "PRODUCT_NO_TOUCH",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "PRODUCT_TOUCH",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "PRODUCT_TURBOS",
    data: BytesLike
  ): Result;

  events: {};
}

export interface OptionLib extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: OptionLibInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    OPTION_AMERICAN(overrides?: CallOverrides): Promise<[BigNumber]>;

    OPTION_DIGITAL(overrides?: CallOverrides): Promise<[BigNumber]>;

    OPTION_FIRST(overrides?: CallOverrides): Promise<[BigNumber]>;

    OPTION_LAST(overrides?: CallOverrides): Promise<[BigNumber]>;

    OPTION_TURBO(overrides?: CallOverrides): Promise<[BigNumber]>;

    OPTION_TYPE_CALL(overrides?: CallOverrides): Promise<[BigNumber]>;

    OPTION_TYPE_NA(overrides?: CallOverrides): Promise<[BigNumber]>;

    OPTION_TYPE_PUT(overrides?: CallOverrides): Promise<[BigNumber]>;

    PRODUCT_AMERICAN(overrides?: CallOverrides): Promise<[BigNumber]>;

    PRODUCT_BINARY(overrides?: CallOverrides): Promise<[BigNumber]>;

    PRODUCT_DOUBLE_NO_TOUCH(overrides?: CallOverrides): Promise<[BigNumber]>;

    PRODUCT_DOUBLE_TOUCH(overrides?: CallOverrides): Promise<[BigNumber]>;

    PRODUCT_FIRST(overrides?: CallOverrides): Promise<[BigNumber]>;

    PRODUCT_LAST(overrides?: CallOverrides): Promise<[BigNumber]>;

    PRODUCT_NO_TOUCH(overrides?: CallOverrides): Promise<[BigNumber]>;

    PRODUCT_TOUCH(overrides?: CallOverrides): Promise<[BigNumber]>;

    PRODUCT_TURBOS(overrides?: CallOverrides): Promise<[BigNumber]>;
  };

  OPTION_AMERICAN(overrides?: CallOverrides): Promise<BigNumber>;

  OPTION_DIGITAL(overrides?: CallOverrides): Promise<BigNumber>;

  OPTION_FIRST(overrides?: CallOverrides): Promise<BigNumber>;

  OPTION_LAST(overrides?: CallOverrides): Promise<BigNumber>;

  OPTION_TURBO(overrides?: CallOverrides): Promise<BigNumber>;

  OPTION_TYPE_CALL(overrides?: CallOverrides): Promise<BigNumber>;

  OPTION_TYPE_NA(overrides?: CallOverrides): Promise<BigNumber>;

  OPTION_TYPE_PUT(overrides?: CallOverrides): Promise<BigNumber>;

  PRODUCT_AMERICAN(overrides?: CallOverrides): Promise<BigNumber>;

  PRODUCT_BINARY(overrides?: CallOverrides): Promise<BigNumber>;

  PRODUCT_DOUBLE_NO_TOUCH(overrides?: CallOverrides): Promise<BigNumber>;

  PRODUCT_DOUBLE_TOUCH(overrides?: CallOverrides): Promise<BigNumber>;

  PRODUCT_FIRST(overrides?: CallOverrides): Promise<BigNumber>;

  PRODUCT_LAST(overrides?: CallOverrides): Promise<BigNumber>;

  PRODUCT_NO_TOUCH(overrides?: CallOverrides): Promise<BigNumber>;

  PRODUCT_TOUCH(overrides?: CallOverrides): Promise<BigNumber>;

  PRODUCT_TURBOS(overrides?: CallOverrides): Promise<BigNumber>;

  callStatic: {
    OPTION_AMERICAN(overrides?: CallOverrides): Promise<BigNumber>;

    OPTION_DIGITAL(overrides?: CallOverrides): Promise<BigNumber>;

    OPTION_FIRST(overrides?: CallOverrides): Promise<BigNumber>;

    OPTION_LAST(overrides?: CallOverrides): Promise<BigNumber>;

    OPTION_TURBO(overrides?: CallOverrides): Promise<BigNumber>;

    OPTION_TYPE_CALL(overrides?: CallOverrides): Promise<BigNumber>;

    OPTION_TYPE_NA(overrides?: CallOverrides): Promise<BigNumber>;

    OPTION_TYPE_PUT(overrides?: CallOverrides): Promise<BigNumber>;

    PRODUCT_AMERICAN(overrides?: CallOverrides): Promise<BigNumber>;

    PRODUCT_BINARY(overrides?: CallOverrides): Promise<BigNumber>;

    PRODUCT_DOUBLE_NO_TOUCH(overrides?: CallOverrides): Promise<BigNumber>;

    PRODUCT_DOUBLE_TOUCH(overrides?: CallOverrides): Promise<BigNumber>;

    PRODUCT_FIRST(overrides?: CallOverrides): Promise<BigNumber>;

    PRODUCT_LAST(overrides?: CallOverrides): Promise<BigNumber>;

    PRODUCT_NO_TOUCH(overrides?: CallOverrides): Promise<BigNumber>;

    PRODUCT_TOUCH(overrides?: CallOverrides): Promise<BigNumber>;

    PRODUCT_TURBOS(overrides?: CallOverrides): Promise<BigNumber>;
  };

  filters: {};

  estimateGas: {
    OPTION_AMERICAN(overrides?: CallOverrides): Promise<BigNumber>;

    OPTION_DIGITAL(overrides?: CallOverrides): Promise<BigNumber>;

    OPTION_FIRST(overrides?: CallOverrides): Promise<BigNumber>;

    OPTION_LAST(overrides?: CallOverrides): Promise<BigNumber>;

    OPTION_TURBO(overrides?: CallOverrides): Promise<BigNumber>;

    OPTION_TYPE_CALL(overrides?: CallOverrides): Promise<BigNumber>;

    OPTION_TYPE_NA(overrides?: CallOverrides): Promise<BigNumber>;

    OPTION_TYPE_PUT(overrides?: CallOverrides): Promise<BigNumber>;

    PRODUCT_AMERICAN(overrides?: CallOverrides): Promise<BigNumber>;

    PRODUCT_BINARY(overrides?: CallOverrides): Promise<BigNumber>;

    PRODUCT_DOUBLE_NO_TOUCH(overrides?: CallOverrides): Promise<BigNumber>;

    PRODUCT_DOUBLE_TOUCH(overrides?: CallOverrides): Promise<BigNumber>;

    PRODUCT_FIRST(overrides?: CallOverrides): Promise<BigNumber>;

    PRODUCT_LAST(overrides?: CallOverrides): Promise<BigNumber>;

    PRODUCT_NO_TOUCH(overrides?: CallOverrides): Promise<BigNumber>;

    PRODUCT_TOUCH(overrides?: CallOverrides): Promise<BigNumber>;

    PRODUCT_TURBOS(overrides?: CallOverrides): Promise<BigNumber>;
  };

  populateTransaction: {
    OPTION_AMERICAN(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    OPTION_DIGITAL(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    OPTION_FIRST(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    OPTION_LAST(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    OPTION_TURBO(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    OPTION_TYPE_CALL(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    OPTION_TYPE_NA(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    OPTION_TYPE_PUT(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    PRODUCT_AMERICAN(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    PRODUCT_BINARY(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    PRODUCT_DOUBLE_NO_TOUCH(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    PRODUCT_DOUBLE_TOUCH(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    PRODUCT_FIRST(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    PRODUCT_LAST(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    PRODUCT_NO_TOUCH(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    PRODUCT_TOUCH(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    PRODUCT_TURBOS(overrides?: CallOverrides): Promise<PopulatedTransaction>;
  };
}
