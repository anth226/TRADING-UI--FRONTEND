/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumber,
  BytesLike,
  CallOverrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import type { FunctionFragment, Result } from "@ethersproject/abi";
import type { Listener, Provider } from "@ethersproject/providers";
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
  PromiseOrValue,
} from "../../../common";

export interface AbdkInterface extends utils.Interface {
  functions: {
    "_0_5()": FunctionFragment;
    "_1()": FunctionFragment;
    "_10()": FunctionFragment;
    "_100()": FunctionFragment;
    "_1000()": FunctionFragment;
    "_2()": FunctionFragment;
    "_3()": FunctionFragment;
    "_4()": FunctionFragment;
    "_6()": FunctionFragment;
    "_64()": FunctionFragment;
    "_8()": FunctionFragment;
  };

  getFunction(
    nameOrSignatureOrTopic:
      | "_0_5"
      | "_1"
      | "_10"
      | "_100"
      | "_1000"
      | "_2"
      | "_3"
      | "_4"
      | "_6"
      | "_64"
      | "_8"
  ): FunctionFragment;

  encodeFunctionData(functionFragment: "_0_5", values?: undefined): string;
  encodeFunctionData(functionFragment: "_1", values?: undefined): string;
  encodeFunctionData(functionFragment: "_10", values?: undefined): string;
  encodeFunctionData(functionFragment: "_100", values?: undefined): string;
  encodeFunctionData(functionFragment: "_1000", values?: undefined): string;
  encodeFunctionData(functionFragment: "_2", values?: undefined): string;
  encodeFunctionData(functionFragment: "_3", values?: undefined): string;
  encodeFunctionData(functionFragment: "_4", values?: undefined): string;
  encodeFunctionData(functionFragment: "_6", values?: undefined): string;
  encodeFunctionData(functionFragment: "_64", values?: undefined): string;
  encodeFunctionData(functionFragment: "_8", values?: undefined): string;

  decodeFunctionResult(functionFragment: "_0_5", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "_1", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "_10", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "_100", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "_1000", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "_2", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "_3", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "_4", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "_6", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "_64", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "_8", data: BytesLike): Result;

  events: {};
}

export interface Abdk extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: AbdkInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    _0_5(overrides?: CallOverrides): Promise<[BigNumber]>;

    _1(overrides?: CallOverrides): Promise<[BigNumber]>;

    _10(overrides?: CallOverrides): Promise<[BigNumber]>;

    _100(overrides?: CallOverrides): Promise<[BigNumber]>;

    _1000(overrides?: CallOverrides): Promise<[BigNumber]>;

    _2(overrides?: CallOverrides): Promise<[BigNumber]>;

    _3(overrides?: CallOverrides): Promise<[BigNumber]>;

    _4(overrides?: CallOverrides): Promise<[BigNumber]>;

    _6(overrides?: CallOverrides): Promise<[BigNumber]>;

    _64(overrides?: CallOverrides): Promise<[BigNumber]>;

    _8(overrides?: CallOverrides): Promise<[BigNumber]>;
  };

  _0_5(overrides?: CallOverrides): Promise<BigNumber>;

  _1(overrides?: CallOverrides): Promise<BigNumber>;

  _10(overrides?: CallOverrides): Promise<BigNumber>;

  _100(overrides?: CallOverrides): Promise<BigNumber>;

  _1000(overrides?: CallOverrides): Promise<BigNumber>;

  _2(overrides?: CallOverrides): Promise<BigNumber>;

  _3(overrides?: CallOverrides): Promise<BigNumber>;

  _4(overrides?: CallOverrides): Promise<BigNumber>;

  _6(overrides?: CallOverrides): Promise<BigNumber>;

  _64(overrides?: CallOverrides): Promise<BigNumber>;

  _8(overrides?: CallOverrides): Promise<BigNumber>;

  callStatic: {
    _0_5(overrides?: CallOverrides): Promise<BigNumber>;

    _1(overrides?: CallOverrides): Promise<BigNumber>;

    _10(overrides?: CallOverrides): Promise<BigNumber>;

    _100(overrides?: CallOverrides): Promise<BigNumber>;

    _1000(overrides?: CallOverrides): Promise<BigNumber>;

    _2(overrides?: CallOverrides): Promise<BigNumber>;

    _3(overrides?: CallOverrides): Promise<BigNumber>;

    _4(overrides?: CallOverrides): Promise<BigNumber>;

    _6(overrides?: CallOverrides): Promise<BigNumber>;

    _64(overrides?: CallOverrides): Promise<BigNumber>;

    _8(overrides?: CallOverrides): Promise<BigNumber>;
  };

  filters: {};

  estimateGas: {
    _0_5(overrides?: CallOverrides): Promise<BigNumber>;

    _1(overrides?: CallOverrides): Promise<BigNumber>;

    _10(overrides?: CallOverrides): Promise<BigNumber>;

    _100(overrides?: CallOverrides): Promise<BigNumber>;

    _1000(overrides?: CallOverrides): Promise<BigNumber>;

    _2(overrides?: CallOverrides): Promise<BigNumber>;

    _3(overrides?: CallOverrides): Promise<BigNumber>;

    _4(overrides?: CallOverrides): Promise<BigNumber>;

    _6(overrides?: CallOverrides): Promise<BigNumber>;

    _64(overrides?: CallOverrides): Promise<BigNumber>;

    _8(overrides?: CallOverrides): Promise<BigNumber>;
  };

  populateTransaction: {
    _0_5(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    _1(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    _10(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    _100(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    _1000(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    _2(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    _3(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    _4(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    _6(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    _64(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    _8(overrides?: CallOverrides): Promise<PopulatedTransaction>;
  };
}
