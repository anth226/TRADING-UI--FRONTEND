/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  SimpleOracle,
  SimpleOracleInterface,
} from "../../contracts/SimpleOracle";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_usd",
        type: "address",
      },
      {
        internalType: "address",
        name: "_blx",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "getBlxUsdRate",
    outputs: [
      {
        internalType: "int128",
        name: "",
        type: "int128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516103b23803806103b283398101604081905261002f916100ca565b816001600160a01b03811661005f5760405162461bcd60e51b815260040161005690610102565b60405180910390fd5b816001600160a01b0381166100865760405162461bcd60e51b815260040161005690610102565b5050600080546001600160a01b039384166001600160a01b03199182161790915560018054929093169116179055610157565b80516100c481610140565b92915050565b600080604083850312156100dc578182fd5b6100e8848385016100b9565b915060206100f8858286016100b9565b9150509250929050565b602080825281016100c481600f81526e53523a4e554c4c5f4144445245535360881b602082015260400190565b60006001600160a01b0382166100c4565b6101498161012f565b811461015457600080fd5b50565b61024c806101666000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063fa4bdd6714610030575b600080fd5b61003861004e565b60405161004591906101f6565b60405180910390f35b600154604080517f313ce5670000000000000000000000000000000000000000000000000000000081529051600092680100000000000000009273ffffffffffffffffffffffffffffffffffffffff9091169163313ce56791600480820192602092909190829003018186803b1580156100c757600080fd5b505afa1580156100db573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100ff91906101c2565b60ff1681901b905060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561016d57600080fd5b505afa158015610181573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101a591906101c2565b60ff161c60011c919050565b80516101bc81610204565b92915050565b6000602082840312156101d3578081fd5b6101df838284016101b1565b9392505050565b6101f081600f0b90565b82525050565b602081016101bc82846101e6565b60ff8116811461021357600080fd5b5056fea2646970667358221220eb76c7dc4e807f4d60729fab72555f6fac5e718428314f65eee8a62a8e75753b64736f6c63430008040033";

type SimpleOracleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SimpleOracleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SimpleOracle__factory extends ContractFactory {
  constructor(...args: SimpleOracleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _usd: PromiseOrValue<string>,
    _blx: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<SimpleOracle> {
    return super.deploy(_usd, _blx, overrides || {}) as Promise<SimpleOracle>;
  }
  override getDeployTransaction(
    _usd: PromiseOrValue<string>,
    _blx: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_usd, _blx, overrides || {});
  }
  override attach(address: string): SimpleOracle {
    return super.attach(address) as SimpleOracle;
  }
  override connect(signer: Signer): SimpleOracle__factory {
    return super.connect(signer) as SimpleOracle__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SimpleOracleInterface {
    return new utils.Interface(_abi) as SimpleOracleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SimpleOracle {
    return new Contract(address, _abi, signerOrProvider) as SimpleOracle;
  }
}
