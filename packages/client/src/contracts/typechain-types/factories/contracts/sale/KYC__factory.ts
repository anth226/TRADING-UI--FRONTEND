/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type { KYC, KYCInterface } from "../../../contracts/sale/KYC";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_presaleAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_users",
        type: "address[]",
      },
    ],
    name: "acceptMany",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_users",
        type: "address[]",
      },
    ],
    name: "rejectMany",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "status",
        type: "uint256",
      },
    ],
    name: "updateUserStatus",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "userStatus",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "users",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516109c03803806109c083398101604081905261002f916100ed565b6100383361008c565b6001600160a01b0381166100675760405162461bcd60e51b815260040161005e90610111565b60405180910390fd5b600180546001600160a01b0319166001600160a01b0392909216919091179055610174565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516100e78161015d565b92915050565b6000602082840312156100fe578081fd5b61010a838284016100dc565b9392505050565b602080825281016100e781601881527f4b59433a50524553414c455f414444524553535f5a45524f0000000000000000602082015260400190565b60006001600160a01b0382166100e7565b6101668161014c565b811461017157600080fd5b50565b61083d806101836000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80638da5cb5b1161005b5780638da5cb5b146100fc578063a87430ba14610115578063e3d734d014610135578063f2fde38b1461014857600080fd5b80631b1e5d5d1461008d578063225d29a1146100a25780635baeb7af146100e1578063715018a6146100f4575b600080fd5b6100a061009b3660046105c2565b61015b565b005b6100cb6100b0366004610566565b6001600160a01b031660009081526002602052604090205490565b6040516100d8919061071a565b60405180910390f35b6100a06100ef36600461058a565b610277565b6100a06102c5565b6000546001600160a01b03166040516100d89190610670565b6100cb610123366004610566565b60026020526000908152604090205481565b6100a06101433660046105c2565b6102d9565b6100a0610156366004610566565b6103f0565b61016361042a565b805160005b818110156102725760006002600085848151811061019657634e487b7160e01b600052603260045260246000fd5b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002081905550600160009054906101000a90046001600160a01b03166001600160a01b031663743672f484838151811061020657634e487b7160e01b600052603260045260246000fd5b602002602001015160006040518363ffffffff1660e01b815260040161022d92919061067e565b600060405180830381600087803b15801561024757600080fd5b505af115801561025b573d6000803e3d6000fd5b50505050808061026a906107a6565b915050610168565b505050565b61027f61042a565b60018111156102a95760405162461bcd60e51b81526004016102a09061070a565b60405180910390fd5b6001600160a01b03909116600090815260026020526040902055565b6102cd61042a565b6102d76000610454565b565b6102e161042a565b805160005b818110156102725760016002600085848151811061031457634e487b7160e01b600052603260045260246000fd5b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002081905550600160009054906101000a90046001600160a01b03166001600160a01b031663743672f484838151811061038457634e487b7160e01b600052603260045260246000fd5b602002602001015160016040518363ffffffff1660e01b81526004016103ab92919061067e565b600060405180830381600087803b1580156103c557600080fd5b505af11580156103d9573d6000803e3d6000fd5b5050505080806103e8906107a6565b9150506102e6565b6103f861042a565b6001600160a01b03811661041e5760405162461bcd60e51b81526004016102a090610699565b61042781610454565b50565b6000546001600160a01b031633146102d75760405162461bcd60e51b81526004016102a0906106fa565b600080546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006104cf6104ca84610744565b610728565b905080838252602082019050828560208602850111156104ee57600080fd5b60005b85811015610518576105038783610522565b835260209283019291909101906001016104f1565b5050509392505050565b803561052d816107ed565b92915050565b600082601f830112610543578081fd5b81356105538482602086016104bc565b949350505050565b803561052d81610801565b600060208284031215610577578081fd5b61058383828401610522565b9392505050565b6000806040838503121561059c578081fd5b6105a884828501610522565b915060206105b88582860161055b565b9150509250929050565b6000602082840312156105d3578081fd5b8082013567ffffffffffffffff8111156105eb578182fd5b61055384828501610533565b61060081610768565b82525050565b60208082527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657291019081525b60200190565b60178152602081017f4b59433a494e56414c49445f555345525f53544154555300000000000000000081529050610632565b80610600565b6020810161052d82846105f7565b6040810161068c82856105f7565b610583602083018461066a565b6020808252810161052d81602681527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160208201527f6464726573730000000000000000000000000000000000000000000000000000604082015260600190565b6020808252810161052d81610606565b6020808252810161052d81610638565b6020810161052d828461066a565b600061073360405190565b905061073f8282610779565b919050565b600067ffffffffffffffff82111561075e5761075e6107d7565b5060209081020190565b60006001600160a01b03821661052d565b601f19601f830116810181811067ffffffffffffffff8211171561079f5761079f6107d7565b6040525050565b60006000198214156107ba576107ba6107c1565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6107f681610768565b811461042757600080fd5b806107f656fea2646970667358221220e04dee441b750db8054bdc0d6db3f4bfbf381dc8d186dcb31c8301e32ad2adec64736f6c63430008040033";

type KYCConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: KYCConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class KYC__factory extends ContractFactory {
  constructor(...args: KYCConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _presaleAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<KYC> {
    return super.deploy(_presaleAddress, overrides || {}) as Promise<KYC>;
  }
  override getDeployTransaction(
    _presaleAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_presaleAddress, overrides || {});
  }
  override attach(address: string): KYC {
    return super.attach(address) as KYC;
  }
  override connect(signer: Signer): KYC__factory {
    return super.connect(signer) as KYC__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): KYCInterface {
    return new utils.Interface(_abi) as KYCInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): KYC {
    return new Contract(address, _abi, signerOrProvider) as KYC;
  }
}
