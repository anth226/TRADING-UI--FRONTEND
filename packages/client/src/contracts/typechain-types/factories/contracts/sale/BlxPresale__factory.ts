/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  BlxPresale,
  BlxPresaleInterface,
} from "../../../contracts/sale/BlxPresale";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_usdcAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_blxAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "addTrustedAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "additionalTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "amountFromWhitelisted",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "amountTransfered",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "blxRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "collaterals",
    outputs: [
      {
        internalType: "uint256",
        name: "userStatus",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "redeemed",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_kycAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_daoAgentAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_presaleDuration",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_additionalTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_softCap",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_hardCap",
        type: "uint256",
      },
    ],
    name: "config",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "daoAgentAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "enterPresale",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "hardCap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "hardCapReached",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "isTrustedAddress",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isTrustedCaller",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "kycAvailable",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "kycReady",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "minAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "presaleActive",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "presaleDuration",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "presaleEnd",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "presaleEndPlus",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "presaleSoftCapStatus",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "refund",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "removeTrustedAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "setMinAmount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "softCap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "softCapReached",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "start",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "transferToDaoAgent",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "investor",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "newUserStatus",
        type: "uint256",
      },
    ],
    name: "updateAmountFromWhitelisted",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052600a6008553480156200001657600080fd5b5060405162001c3038038062001c30833981016040819052620000399162000134565b6200004433620000d1565b6001600160a01b038216620000765760405162461bcd60e51b81526004016200006d90620001ea565b60405180910390fd5b6001600160a01b0381166200009f5760405162461bcd60e51b81526004016200006d90620001d8565b600f80546001600160a01b039384166001600160a01b0319918216179091556010805492909316911617905562000228565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516200012e816200020e565b92915050565b6000806040838503121562000147578182fd5b620001558483850162000121565b91506020620001678582860162000121565b9150509250929050565b60188152602081017f50524553414c453a424c585f414444524553535f5a45524f0000000000000000815290505b60200190565b60198152602081017f50524553414c453a555344435f414444524553535f5a45524f00000000000000815290506200019f565b602080825281016200012e8162000171565b602080825281016200012e81620001a5565b60006001600160a01b0382166200012e565b6200021981620001fc565b81146200022557600080fd5b50565b6119f880620002386000396000f3fe608060405234801561001057600080fd5b506004361061020b5760003560e01c8063897b06371161012a578063df119948116100bd578063f6e6a5c51161008c578063fb86a40411610071578063fb86a404146103f6578063fe621505146103ff578063fea422981461041257600080fd5b8063f6e6a5c5146103da578063f9f494ed146103e357600080fd5b8063df11994814610374578063eeb97d3b1461037d578063f2fde38b146103be578063f45b617b146103d157600080fd5b80639b2cb5d8116100f95780639b2cb5d814610347578063be9a655514610350578063c66b020814610358578063d6989a521461036157600080fd5b8063897b0637146102fd5780638da5cb5b14610310578063906a26e01461032a5780639762f8021461033357600080fd5b806353c39581116101a25780636181aef6116101715780636181aef6146102c95780636b98d5cb146102da578063715018a6146102e2578063743672f4146102ea57600080fd5b806353c395811461029d5780635868c32a146102a5578063590e1ae3146102ae5780635f7cca77146102b657600080fd5b80632eb0fca7116101de5780632eb0fca71461026c5780633fed1020146102755780634e71d92d1461028857806353135ca01461029057600080fd5b80630848a136146102105780630c3bc0a814610239578063229f3e29146102435780632b9edee914610259575b600080fd5b61022361021e36600461121e565b610424565b60405161023091906117b5565b60405180910390f35b610241610450565b005b61024c600d5481565b60405161023091906118d1565b6009546102239062010000900460ff1681565b61024c60085481565b610241610283366004611242565b6105a5565b610241610733565b6009546102239060ff1681565b61022361095d565b61024c60065481565b61024161097f565b6102416102c436600461131c565b610bca565b60095462010000900460ff16610223565b610241610f53565b610241610f88565b6102416102f83660046112c7565b610f9c565b61024161030b36600461131c565b611060565b6000546001600160a01b03165b604051610230919061175c565b61024c60035481565b600954610223906301000000900460ff1681565b61024c60055481565b610241611089565b61024c600b5481565b60125461031d906001600160a01b031681565b61024c60075481565b6103af61038b36600461121e565b600a6020526000908152604090208054600182015460029092015490919060ff1683565b604051610230939291906118df565b6102416103cc36600461121e565b6110dc565b61024c600c5481565b61024c600e5481565b6102416103f136600461121e565b611113565b61024c60045481565b61024161040d36600461121e565b61113c565b60095461022390610100900460ff1681565b6001600160a01b03811660009081526001602052604081205460ff168061044a57503330145b92915050565b61045861095d565b61047d5760405162461bcd60e51b815260040161047490611821565b60405180910390fd5b600d5442101580610491575060095460ff16155b6104ad5760405162461bcd60e51b8152600401610474906117e1565b60095462010000900460ff166104d55760405162461bcd60e51b8152600401610474906117d1565b6000600c54600b546104e7919061193e565b116105045760405162461bcd60e51b815260040161047490611831565b600f54601254600c54600b546001600160a01b039384169363a9059cbb93169161052d9161193e565b6040518363ffffffff1660e01b815260040161054a92919061179a565b602060405180830381600087803b15801561056457600080fd5b505af1158015610578573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061059c91906112ff565b50600b54600c55565b6105ad61116b565b600254610100900460ff16158080156105cd5750600254600160ff909116105b806105e75750303b1580156105e7575060025460ff166001145b6106035760405162461bcd60e51b815260040161047490611841565b6002805460ff191660011790558015610626576002805461ff0019166101001790555b6001600160a01b03871661064c5760405162461bcd60e51b815260040161047490611851565b6001600160a01b0386166106725760405162461bcd60e51b8152600401610474906117f1565b6011805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0389161790556106a38761113c565b6012805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0388161790556006859055600784905560038390556004829055801561072a576002805461ff00191690556040517f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb384740249890610721906001906117c3565b60405180910390a15b50505050505050565b600d544210158061074d57506009546301000000900460ff165b6107695760405162461bcd60e51b8152600401610474906117e1565b600954610100900460ff16806107815750600e544210155b61079d5760405162461bcd60e51b815260040161047490611861565b60095462010000900460ff166107c55760405162461bcd60e51b8152600401610474906117d1565b60115460405163225d29a160e01b81526001916001600160a01b03169063225d29a1906107f690339060040161175c565b60206040518083038186803b15801561080e57600080fd5b505afa158015610822573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108469190611339565b146108635760405162461bcd60e51b815260040161047490611881565b336000908152600a602052604090206002015460ff16156108965760405162461bcd60e51b815260040161047490611811565b600854336000908152600a602052604081206001015490916108b79161191f565b60105460405163a9059cbb60e01b81529192506001600160a01b03169063a9059cbb906108ea903390859060040161179a565b602060405180830381600087803b15801561090457600080fd5b505af1158015610918573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061093c91906112ff565b5050336000908152600a60205260409020600201805460ff19166001179055565b3360009081526001602052604081205460ff168061097a57503330145b905090565b600d544210158061099957506009546301000000900460ff165b6109b55760405162461bcd60e51b8152600401610474906117e1565b600954610100900460ff16806109cd5750600e544210155b6109e95760405162461bcd60e51b815260040161047490611861565b336000908152600a602052604090206002015460ff1615610a1c5760405162461bcd60e51b815260040161047490611891565b600f54336000818152600a60205260409081902060010154905163a9059cbb60e01b81526001600160a01b039093169263a9059cbb92610a6092909160040161179a565b602060405180830381600087803b158015610a7a57600080fd5b505af1158015610a8e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ab291906112ff565b50600954610100900460ff168015610b48575060115460405163225d29a160e01b81526001916001600160a01b03169063225d29a190610af690339060040161175c565b60206040518083038186803b158015610b0e57600080fd5b505afa158015610b22573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b469190611339565b145b15610ba25760095462010000900460ff1615610b765760405162461bcd60e51b8152600401610474906118a1565b336000908152600a6020526040812060010154600b805491929091610b9c90849061193e565b90915550505b336000908152600a60205260408120600180820192909255600201805460ff19169091179055565b60048054600f546040517f70a0823100000000000000000000000000000000000000000000000000000000815291926001600160a01b03909116916370a0823191610c179130910161175c565b60206040518083038186803b158015610c2f57600080fd5b505afa158015610c43573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c679190611339565b10610ca9576009805463ff00000019166301000000179055600d544210610c93576009805460ff191690555b600454600b5410610ca9576009805460ff191690555b60095460ff16610ccb5760405162461bcd60e51b8152600401610474906118b1565b600d544210610cec5760405162461bcd60e51b8152600401610474906118b1565b600554811015610d0e5760405162461bcd60e51b8152600401610474906118c1565b600f546040517f23b872dd0000000000000000000000000000000000000000000000000000000081526001600160a01b03909116906323b872dd90610d5b9033903090869060040161176a565b602060405180830381600087803b158015610d7557600080fd5b505af1158015610d89573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dad91906112ff565b50600954610100900460ff168015610e43575060115460405163225d29a160e01b81526001916001600160a01b03169063225d29a190610df190339060040161175c565b60206040518083038186803b158015610e0957600080fd5b505afa158015610e1d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e419190611339565b145b15610e735780600b6000828254610e5a9190611907565b9091555050336000908152600a60205260409020600190555b336000908152600a6020526040902060010154158015610ea65750336000908152600a602052604090206002015460ff16155b15610ecf57336000908152600a6020526040902060018101829055600201805460ff1916905550565b336000908152600a602052604090206002015460ff1615610f0e57336000908152600a6020526040902060018101829055600201805460ff1916905550565b336000908152600a602052604081206001018054839290610f30908490611907565b9091555050336000908152600a60205260409020600201805460ff191690555b50565b610f5b61095d565b610f775760405162461bcd60e51b815260040161047490611821565b6009805461ff001916610100179055565b610f9061116b565b610f9a6000611195565b565b610fa461095d565b610fc05760405162461bcd60e51b815260040161047490611821565b6001600160a01b0382166000908152600a602052604090208054821115611000578060010154600b6000828254610ff79190611907565b90915550508181555b8054821015611028578060010154600b600082825461101f919061193e565b90915550508181555b600354600b5410611045576009805462ff00001916620100001790555b600454600b541061105b576009805460ff191690555b505050565b61106861095d565b6110845760405162461bcd60e51b815260040161047490611821565b600555565b61109161095d565b6110ad5760405162461bcd60e51b815260040161047490611821565b6009805460ff191660011790556006546110c79042611907565b600d556007546110d79042611907565b600e55565b6110e461116b565b6001600160a01b03811661110a5760405162461bcd60e51b815260040161047490611801565b610f5081611195565b61111b61116b565b6001600160a01b03166000908152600160205260409020805460ff19169055565b61114461116b565b6001600160a01b03166000908152600160208190526040909120805460ff19169091179055565b6000546001600160a01b03163314610f9a5760405162461bcd60e51b815260040161047490611871565b600080546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b803561044a816119a0565b805161044a816119b4565b803561044a816119bc565b805161044a816119bc565b60006020828403121561122f578081fd5b61123b838284016111f2565b9392505050565b60008060008060008060c0878903121561125a578182fd5b611266888389016111f2565b9550602061127689828a016111f2565b955050604061128789828a01611208565b945050606061129889828a01611208565b93505060806112a989828a01611208565b92505060a06112ba89828a01611208565b9150509295509295509295565b600080604083850312156112d9578182fd5b6112e5848385016111f2565b915060206112f585828601611208565b9150509250929050565b600060208284031215611310578081fd5b61123b838284016111fd565b60006020828403121561132d578081fd5b61123b83828401611208565b60006020828403121561134a578081fd5b61123b83828401611213565b61135f81611955565b82525050565b80151561135f565b61135f81611966565b60238152602081017f50524553414c453a544f54414c5f414d4f554e545f42454c4f575f534f46545f81527f4341500000000000000000000000000000000000000000000000000000000000602082015290505b60400190565b601b8152602081017f50524553414c453a50524553414c455f494e5f50524f47524553530000000000815290505b60200190565b601e8152602081017f50524553414c453a44414f5f4147454e545f414444524553535f5a45524f0000815290506113fe565b60268152602081017f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206181527f6464726573730000000000000000000000000000000000000000000000000000602082015290506113ca565b60178152602081017f50524553414c453a414c52454144595f434c41494d4544000000000000000000815290506113fe565b60198152602081017f41433a414444524553535f49535f4e4f545f5452555354454400000000000000815290506113fe565b601c8152602081017f50524553414c453a4e4f5f46554e44535f544f5f5452414e5346455200000000815290506113fe565b602e8152602081017f496e697469616c697a61626c653a20636f6e747261637420697320616c72656181527f647920696e697469616c697a6564000000000000000000000000000000000000602082015290506113ca565b60188152602081017f50524553414c453a4b59435f414444524553535f5a45524f0000000000000000815290506113fe565b60158152602081017f50524553414c453a4b59435f4e4f545f52454144590000000000000000000000815290506113fe565b60208082527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657291019081526113fe565b601c8152602081017f50524553414c453a4e4f545f494e5f5448455f57484954454c49535400000000815290506113fe565b60188152602081017f50524553414c453a414c52454144595f524546554e4445440000000000000000815290506113fe565b60248152602081017f50524553414c453a504c454153455f434c41494d5f594f55525f424c585f544f81527f4b454e5300000000000000000000000000000000000000000000000000000000602082015290506113ca565b60168152602081017f50524553414c453a50524553414c455f434c4f53454400000000000000000000815290506113fe565b60268152602081017f50524553414c453a4d494e5f414d4f554e545f524551554952454d454e545f4e81527f4f545f4d45540000000000000000000000000000000000000000000000000000602082015290506113ca565b8061135f565b6020810161044a8284611356565b606081016117788286611356565b6117856020830185611356565b6117926040830184611756565b949350505050565b604081016117a88285611356565b61123b6020830184611756565b6020810161044a8284611365565b6020810161044a828461136d565b6020808252810161044a81611376565b6020808252810161044a816113d0565b6020808252810161044a81611404565b6020808252810161044a81611436565b6020808252810161044a8161148e565b6020808252810161044a816114c0565b6020808252810161044a816114f2565b6020808252810161044a81611524565b6020808252810161044a8161157c565b6020808252810161044a816115ae565b6020808252810161044a816115e0565b6020808252810161044a81611610565b6020808252810161044a81611642565b6020808252810161044a81611674565b6020808252810161044a816116cc565b6020808252810161044a816116fe565b6020810161044a8284611756565b606081016118ed8286611756565b6118fa6020830185611756565b6117926040830184611365565b6000821982111561191a5761191a611971565b500190565b600081600019048311821515161561193957611939611971565b500290565b60008282101561195057611950611971565b500390565b60006001600160a01b03821661044a565b600060ff821661044a565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6119a981611955565b8114610f5057600080fd5b8015156119a9565b806119a956fea26469706673582212200f1fbafd8382f69b30b8feb878f884d852e6e71be3e7b84ab7cdfddd5a5598ab64736f6c63430008040033";

type BlxPresaleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BlxPresaleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BlxPresale__factory extends ContractFactory {
  constructor(...args: BlxPresaleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _usdcAddress: PromiseOrValue<string>,
    _blxAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<BlxPresale> {
    return super.deploy(
      _usdcAddress,
      _blxAddress,
      overrides || {}
    ) as Promise<BlxPresale>;
  }
  override getDeployTransaction(
    _usdcAddress: PromiseOrValue<string>,
    _blxAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _usdcAddress,
      _blxAddress,
      overrides || {}
    );
  }
  override attach(address: string): BlxPresale {
    return super.attach(address) as BlxPresale;
  }
  override connect(signer: Signer): BlxPresale__factory {
    return super.connect(signer) as BlxPresale__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BlxPresaleInterface {
    return new utils.Interface(_abi) as BlxPresaleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BlxPresale {
    return new Contract(address, _abi, signerOrProvider) as BlxPresale;
  }
}
