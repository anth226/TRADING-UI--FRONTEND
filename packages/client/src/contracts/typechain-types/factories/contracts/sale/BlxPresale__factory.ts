/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  BlxPresale,
  BlxPresaleInterface,
} from "../../../contracts/sale/BlxPresale";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_usdcAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_blxAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "addTrustedAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "additionalTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "amountFromWhitelisted",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "amountTransfered",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "blxRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "collaterals",
    outputs: [
      {
        internalType: "uint256",
        name: "userStatus",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "redeemed",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_kycAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_daoAgentAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_presaleDuration",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_additionalTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_softCap",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_hardCap",
        type: "uint256",
      },
    ],
    name: "config",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "daoAgentAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "enterPresale",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "hardCap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "hardCapReached",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "isTrustedAddress",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isTrustedCaller",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "kycAvailable",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "kycReady",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "minAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "presaleActive",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "presaleDuration",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "presaleEnd",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "presaleEndPlus",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "presaleSoftCapStatus",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "refund",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "removeTrustedAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "setMinAmount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "softCap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "softCapReached",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "start",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "transferToDaoAgent",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "investor",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "newUserStatus",
        type: "uint256",
      },
    ],
    name: "updateAmountFromWhitelisted",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052600a6008553480156200001657600080fd5b5060405162001c4838038062001c48833981016040819052620000399162000134565b6200004433620000d1565b6001600160a01b038216620000765760405162461bcd60e51b81526004016200006d90620001ea565b60405180910390fd5b6001600160a01b0381166200009f5760405162461bcd60e51b81526004016200006d90620001d8565b600f80546001600160a01b039384166001600160a01b0319918216179091556010805492909316911617905562000228565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516200012e816200020e565b92915050565b6000806040838503121562000147578182fd5b620001558483850162000121565b91506020620001678582860162000121565b9150509250929050565b60188152602081017f50524553414c453a424c585f414444524553535f5a45524f0000000000000000815290505b60200190565b60198152602081017f50524553414c453a555344435f414444524553535f5a45524f00000000000000815290506200019f565b602080825281016200012e8162000171565b602080825281016200012e81620001a5565b60006001600160a01b0382166200012e565b6200021981620001fc565b81146200022557600080fd5b50565b611a1080620002386000396000f3fe608060405234801561001057600080fd5b506004361061020b5760003560e01c8063897b06371161012a578063df119948116100bd578063f6e6a5c51161008c578063fb86a40411610071578063fb86a4041461041f578063fe62150514610428578063fea422981461043b57600080fd5b8063f6e6a5c514610403578063f9f494ed1461040c57600080fd5b8063df1199481461039d578063eeb97d3b146103a6578063f2fde38b146103e7578063f45b617b146103fa57600080fd5b80639b2cb5d8116100f95780639b2cb5d814610370578063be9a655514610379578063c66b020814610381578063d6989a521461038a57600080fd5b8063897b0637146103265780638da5cb5b14610339578063906a26e0146103535780639762f8021461035c57600080fd5b806353c39581116101a25780636181aef6116101715780636181aef6146102f25780636b98d5cb14610303578063715018a61461030b578063743672f41461031357600080fd5b806353c39581146102b65780635868c32a146102ce578063590e1ae3146102d75780635f7cca77146102df57600080fd5b80632eb0fca7116101de5780632eb0fca7146102855780633fed10201461028e5780634e71d92d146102a157806353135ca0146102a957600080fd5b80630848a136146102105780630c3bc0a814610252578063229f3e291461025c5780632b9edee914610272575b600080fd5b61023c61021e366004611236565b6001600160a01b031660009081526001602052604090205460ff1690565b60405161024991906117cd565b60405180910390f35b61025a61044d565b005b610265600d5481565b60405161024991906118e9565b60095461023c9062010000900460ff1681565b61026560085481565b61025a61029c36600461125a565b6105ad565b61025a61073b565b60095461023c9060ff1681565b3360009081526001602052604090205460ff1661023c565b61026560065481565b61025a610965565b61025a6102ed366004611334565b610bb0565b60095462010000900460ff1661023c565b61025a610f39565b61025a610f79565b61025a6103213660046112df565b610f8d565b61025a610334366004611334565b61105c565b6000546001600160a01b03165b6040516102499190611774565b61026560035481565b60095461023c906301000000900460ff1681565b61026560055481565b61025a611090565b610265600b5481565b601254610346906001600160a01b031681565b61026560075481565b6103d86103b4366004611236565b600a6020526000908152604090208054600182015460029092015490919060ff1683565b604051610249939291906118f7565b61025a6103f5366004611236565b6110ee565b610265600c5481565b610265600e5481565b61025a61041a366004611236565b611125565b61026560045481565b61025a610436366004611236565b61114e565b60095461023c90610100900460ff1681565b3360009081526001602052604090205460ff166104855760405162461bcd60e51b815260040161047c90611839565b60405180910390fd5b600d5442101580610499575060095460ff16155b6104b55760405162461bcd60e51b815260040161047c906117f9565b60095462010000900460ff166104dd5760405162461bcd60e51b815260040161047c906117e9565b6000600c54600b546104ef9190611956565b1161050c5760405162461bcd60e51b815260040161047c90611849565b600f54601254600c54600b546001600160a01b039384169363a9059cbb93169161053591611956565b6040518363ffffffff1660e01b81526004016105529291906117b2565b602060405180830381600087803b15801561056c57600080fd5b505af1158015610580573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105a49190611317565b50600b54600c55565b6105b561117d565b600254610100900460ff16158080156105d55750600254600160ff909116105b806105ef5750303b1580156105ef575060025460ff166001145b61060b5760405162461bcd60e51b815260040161047c90611859565b6002805460ff19166001179055801561062e576002805461ff0019166101001790555b6001600160a01b0387166106545760405162461bcd60e51b815260040161047c90611869565b6001600160a01b03861661067a5760405162461bcd60e51b815260040161047c90611809565b6011805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0389161790556106ab8761114e565b6012805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b03881617905560068590556007849055600383905560048290558015610732576002805461ff00191690556040517f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb384740249890610729906001906117db565b60405180910390a15b50505050505050565b600d544210158061075557506009546301000000900460ff165b6107715760405162461bcd60e51b815260040161047c906117f9565b600954610100900460ff16806107895750600e544210155b6107a55760405162461bcd60e51b815260040161047c90611879565b60095462010000900460ff166107cd5760405162461bcd60e51b815260040161047c906117e9565b60115460405163225d29a160e01b81526001916001600160a01b03169063225d29a1906107fe903390600401611774565b60206040518083038186803b15801561081657600080fd5b505afa15801561082a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061084e9190611351565b1461086b5760405162461bcd60e51b815260040161047c90611899565b336000908152600a602052604090206002015460ff161561089e5760405162461bcd60e51b815260040161047c90611829565b600854336000908152600a602052604081206001015490916108bf91611937565b60105460405163a9059cbb60e01b81529192506001600160a01b03169063a9059cbb906108f290339085906004016117b2565b602060405180830381600087803b15801561090c57600080fd5b505af1158015610920573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109449190611317565b5050336000908152600a60205260409020600201805460ff19166001179055565b600d544210158061097f57506009546301000000900460ff165b61099b5760405162461bcd60e51b815260040161047c906117f9565b600954610100900460ff16806109b35750600e544210155b6109cf5760405162461bcd60e51b815260040161047c90611879565b336000908152600a602052604090206002015460ff1615610a025760405162461bcd60e51b815260040161047c906118a9565b600f54336000818152600a60205260409081902060010154905163a9059cbb60e01b81526001600160a01b039093169263a9059cbb92610a469290916004016117b2565b602060405180830381600087803b158015610a6057600080fd5b505af1158015610a74573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a989190611317565b50600954610100900460ff168015610b2e575060115460405163225d29a160e01b81526001916001600160a01b03169063225d29a190610adc903390600401611774565b60206040518083038186803b158015610af457600080fd5b505afa158015610b08573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b2c9190611351565b145b15610b885760095462010000900460ff1615610b5c5760405162461bcd60e51b815260040161047c906118b9565b336000908152600a6020526040812060010154600b805491929091610b82908490611956565b90915550505b336000908152600a60205260408120600180820192909255600201805460ff19169091179055565b60048054600f546040517f70a0823100000000000000000000000000000000000000000000000000000000815291926001600160a01b03909116916370a0823191610bfd91309101611774565b60206040518083038186803b158015610c1557600080fd5b505afa158015610c29573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c4d9190611351565b10610c8f576009805463ff00000019166301000000179055600d544210610c79576009805460ff191690555b600454600b5410610c8f576009805460ff191690555b60095460ff16610cb15760405162461bcd60e51b815260040161047c906118c9565b600d544210610cd25760405162461bcd60e51b815260040161047c906118c9565b600554811015610cf45760405162461bcd60e51b815260040161047c906118d9565b600f546040517f23b872dd0000000000000000000000000000000000000000000000000000000081526001600160a01b03909116906323b872dd90610d4190339030908690600401611782565b602060405180830381600087803b158015610d5b57600080fd5b505af1158015610d6f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d939190611317565b50600954610100900460ff168015610e29575060115460405163225d29a160e01b81526001916001600160a01b03169063225d29a190610dd7903390600401611774565b60206040518083038186803b158015610def57600080fd5b505afa158015610e03573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e279190611351565b145b15610e595780600b6000828254610e40919061191f565b9091555050336000908152600a60205260409020600190555b336000908152600a6020526040902060010154158015610e8c5750336000908152600a602052604090206002015460ff16155b15610eb557336000908152600a6020526040902060018101829055600201805460ff1916905550565b336000908152600a602052604090206002015460ff1615610ef457336000908152600a6020526040902060018101829055600201805460ff1916905550565b336000908152600a602052604081206001018054839290610f1690849061191f565b9091555050336000908152600a60205260409020600201805460ff191690555b50565b3360009081526001602052604090205460ff16610f685760405162461bcd60e51b815260040161047c90611839565b6009805461ff001916610100179055565b610f8161117d565b610f8b60006111a7565b565b3360009081526001602052604090205460ff16610fbc5760405162461bcd60e51b815260040161047c90611839565b6001600160a01b0382166000908152600a602052604090208054821115610ffc578060010154600b6000828254610ff3919061191f565b90915550508181555b8054821015611024578060010154600b600082825461101b9190611956565b90915550508181555b600354600b5410611041576009805462ff00001916620100001790555b600454600b5410611057576009805460ff191690555b505050565b3360009081526001602052604090205460ff1661108b5760405162461bcd60e51b815260040161047c90611839565b600555565b3360009081526001602052604090205460ff166110bf5760405162461bcd60e51b815260040161047c90611839565b6009805460ff191660011790556006546110d9904261191f565b600d556007546110e9904261191f565b600e55565b6110f661117d565b6001600160a01b03811661111c5760405162461bcd60e51b815260040161047c90611819565b610f36816111a7565b61112d61117d565b6001600160a01b03166000908152600160205260409020805460ff19169055565b61115661117d565b6001600160a01b03166000908152600160208190526040909120805460ff19169091179055565b6000546001600160a01b03163314610f8b5760405162461bcd60e51b815260040161047c90611889565b600080546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b803561120f816119b8565b92915050565b805161120f816119cc565b803561120f816119d4565b805161120f816119d4565b600060208284031215611247578081fd5b61125383828401611204565b9392505050565b60008060008060008060c08789031215611272578182fd5b61127e88838901611204565b9550602061128e89828a01611204565b955050604061129f89828a01611220565b94505060606112b089828a01611220565b93505060806112c189828a01611220565b92505060a06112d289828a01611220565b9150509295509295509295565b600080604083850312156112f1578182fd5b6112fd84838501611204565b9150602061130d85828601611220565b9150509250929050565b600060208284031215611328578081fd5b61125383828401611215565b600060208284031215611345578081fd5b61125383828401611220565b600060208284031215611362578081fd5b6112538382840161122b565b6113778161196d565b82525050565b801515611377565b6113778161197e565b60238152602081017f50524553414c453a544f54414c5f414d4f554e545f42454c4f575f534f46545f81527f4341500000000000000000000000000000000000000000000000000000000000602082015290505b60400190565b601b8152602081017f50524553414c453a50524553414c455f494e5f50524f47524553530000000000815290505b60200190565b601e8152602081017f50524553414c453a44414f5f4147454e545f414444524553535f5a45524f000081529050611416565b60268152602081017f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206181527f6464726573730000000000000000000000000000000000000000000000000000602082015290506113e2565b60178152602081017f50524553414c453a414c52454144595f434c41494d454400000000000000000081529050611416565b60198152602081017f41433a414444524553535f49535f4e4f545f545255535445440000000000000081529050611416565b601c8152602081017f50524553414c453a4e4f5f46554e44535f544f5f5452414e534645520000000081529050611416565b602e8152602081017f496e697469616c697a61626c653a20636f6e747261637420697320616c72656181527f647920696e697469616c697a6564000000000000000000000000000000000000602082015290506113e2565b60188152602081017f50524553414c453a4b59435f414444524553535f5a45524f000000000000000081529050611416565b60158152602081017f50524553414c453a4b59435f4e4f545f5245414459000000000000000000000081529050611416565b60208082527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65729101908152611416565b601c8152602081017f50524553414c453a4e4f545f494e5f5448455f57484954454c4953540000000081529050611416565b60188152602081017f50524553414c453a414c52454144595f524546554e444544000000000000000081529050611416565b60248152602081017f50524553414c453a504c454153455f434c41494d5f594f55525f424c585f544f81527f4b454e5300000000000000000000000000000000000000000000000000000000602082015290506113e2565b60168152602081017f50524553414c453a50524553414c455f434c4f5345440000000000000000000081529050611416565b60268152602081017f50524553414c453a4d494e5f414d4f554e545f524551554952454d454e545f4e81527f4f545f4d45540000000000000000000000000000000000000000000000000000602082015290506113e2565b80611377565b6020810161120f828461136e565b60608101611790828661136e565b61179d602083018561136e565b6117aa604083018461176e565b949350505050565b604081016117c0828561136e565b611253602083018461176e565b6020810161120f828461137d565b6020810161120f8284611385565b6020808252810161120f8161138e565b6020808252810161120f816113e8565b6020808252810161120f8161141c565b6020808252810161120f8161144e565b6020808252810161120f816114a6565b6020808252810161120f816114d8565b6020808252810161120f8161150a565b6020808252810161120f8161153c565b6020808252810161120f81611594565b6020808252810161120f816115c6565b6020808252810161120f816115f8565b6020808252810161120f81611628565b6020808252810161120f8161165a565b6020808252810161120f8161168c565b6020808252810161120f816116e4565b6020808252810161120f81611716565b6020810161120f828461176e565b60608101611905828661176e565b611912602083018561176e565b6117aa604083018461137d565b6000821982111561193257611932611989565b500190565b600081600019048311821515161561195157611951611989565b500290565b60008282101561196857611968611989565b500390565b60006001600160a01b03821661120f565b600060ff821661120f565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6119c18161196d565b8114610f3657600080fd5b8015156119c1565b806119c156fea26469706673582212201a1dc2c91316ccdde19601774faef4c52f168ed23a14abda47e91c3d1eeccba964736f6c63430008040033";

type BlxPresaleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BlxPresaleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BlxPresale__factory extends ContractFactory {
  constructor(...args: BlxPresaleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _usdcAddress: PromiseOrValue<string>,
    _blxAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<BlxPresale> {
    return super.deploy(
      _usdcAddress,
      _blxAddress,
      overrides || {}
    ) as Promise<BlxPresale>;
  }
  override getDeployTransaction(
    _usdcAddress: PromiseOrValue<string>,
    _blxAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _usdcAddress,
      _blxAddress,
      overrides || {}
    );
  }
  override attach(address: string): BlxPresale {
    return super.attach(address) as BlxPresale;
  }
  override connect(signer: Signer): BlxPresale__factory {
    return super.connect(signer) as BlxPresale__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BlxPresaleInterface {
    return new utils.Interface(_abi) as BlxPresaleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BlxPresale {
    return new Contract(address, _abi, signerOrProvider) as BlxPresale;
  }
}
