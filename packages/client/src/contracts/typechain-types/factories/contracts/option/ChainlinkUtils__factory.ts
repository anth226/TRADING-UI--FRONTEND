/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  ChainlinkUtils,
  ChainlinkUtilsInterface,
} from "../../../contracts/option/ChainlinkUtils";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
    ],
    name: "ChainlinkCancelled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
    ],
    name: "ChainlinkFulfilled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
    ],
    name: "ChainlinkRequested",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "addTrustedAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_node",
        type: "address",
      },
      {
        internalType: "address",
        name: "_oracle",
        type: "address",
      },
      {
        internalType: "address",
        name: "_link",
        type: "address",
      },
    ],
    name: "configureNode",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "isTrustedAddress",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isTrustedCaller",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "jobId",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "linkToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "node",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "oracle",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "removeTrustedAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "jobName",
        type: "string",
      },
      {
        internalType: "string",
        name: "_jobId",
        type: "string",
      },
    ],
    name: "setJobId",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052600160065534801561001557600080fd5b5061001f33610024565b610074565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b61088a806100836000396000f3fe608060405234801561001057600080fd5b50600436106100df5760003560e01c80638da5cb5b1161008c578063e862efa911610066578063e862efa9146101ea578063f2fde38b146101fd578063f9f494ed14610210578063fe6215051461022357600080fd5b80638da5cb5b1461018e5780638e9f29a91461019f578063d70754ec146101d757600080fd5b806357970e93116100bd57806357970e9314610153578063715018a6146101735780637dc0d1d01461017b57600080fd5b80630848a136146100e45780633bae74291461012657806353c395811461013b575b600080fd5b6101106100f23660046104ec565b6001600160a01b031660009081526001602052604090205460ff1690565b60405161011d91906106b3565b60405180910390f35b610139610134366004610510565b610236565b005b3360009081526001602052604090205460ff16610110565b600954610166906001600160a01b031681565b60405161011d91906106a5565b6101396102cf565b600854610166906001600160a01b031681565b6000546001600160a01b0316610166565b6101ca6101ad36600461055b565b8051602081830181018051600b8252928201919093012091525481565b60405161011d91906106c1565b600a54610166906001600160a01b031681565b6101396101f8366004610590565b6102e3565b61013961020b3660046104ec565b61033f565b61013961021e3660046104ec565b610379565b6101396102313660046104ec565b6103a2565b3360009081526001602052604090205460ff1661026e5760405162461bcd60e51b815260040161026590610730565b60405180910390fd5b600880546001600160a01b0384811673ffffffffffffffffffffffffffffffffffffffff1992831617909255600a805486841690831617905560048054928416928216831790556009805490911690911790556102ca836103a2565b505050565b6102d76103d1565b6102e160006103fb565b565b3360009081526001602052604090205460ff166103125760405162461bcd60e51b815260040161026590610730565b61031b81610458565b600b8360405161032b919061069b565b908152604051908190036020019020555050565b6103476103d1565b6001600160a01b03811661036d5760405162461bcd60e51b8152600401610265906106cf565b610376816103fb565b50565b6103816103d1565b6001600160a01b03166000908152600160205260409020805460ff19169055565b6103aa6103d1565b6001600160a01b03166000908152600160208190526040909120805460ff19169091179055565b6000546001600160a01b031633146102e15760405162461bcd60e51b815260040161026590610740565b600080546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b8051600090829061046c5750600092915050565b50506020015190565b60006104886104838461076c565b610750565b9050828152602081018484840111156104a057600080fd5b6104ab8482856107a8565b509392505050565b80356104be81610840565b92915050565b600082601f8301126104d4578081fd5b81356104e4848260208601610475565b949350505050565b6000602082840312156104fd578081fd5b610509838284016104b3565b9392505050565b600080600060608486031215610524578182fd5b610530858386016104b3565b92506020610540868287016104b3565b9250506040610551868287016104b3565b9150509250925092565b60006020828403121561056c578081fd5b8082013567ffffffffffffffff811115610584578182fd5b6104e4848285016104c4565b600080604083850312156105a2578182fd5b8183013567ffffffffffffffff8111156105ba578283fd5b6105c6858286016104c4565b925050602083013567ffffffffffffffff8111156105e2578182fd5b6105ee858286016104c4565b9150509250929050565b61060181610797565b82525050565b801515610601565b80610601565b600061061f825190565b61062d8185602086016107b4565b9290920192915050565b60198152602081017f41433a414444524553535f49535f4e4f545f5452555354454400000000000000815290505b60200190565b60208082527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65729101908152610665565b6104be8183610615565b602081016104be82846105f8565b602081016104be8284610607565b602081016104be828461060f565b602080825281016104be81602681527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160208201527f6464726573730000000000000000000000000000000000000000000000000000604082015260600190565b602080825281016104be81610637565b602080825281016104be8161066b565b600061075b60405190565b905061076782826107e4565b919050565b600067ffffffffffffffff82111561078657610786610811565b601f19601f83011660200192915050565b60006001600160a01b0382166104be565b82818337506000910152565b60005b838110156107cf5781810151838201526020016107b7565b838111156107de576000848401525b50505050565b601f19601f830116810181811067ffffffffffffffff8211171561080a5761080a610811565b6040525050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61084981610797565b811461037657600080fdfea2646970667358221220306f3a01a00dfc2acb9d4e7e8886048488c1822af08a063c06cfb4991b1935b564736f6c63430008040033";

type ChainlinkUtilsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ChainlinkUtilsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ChainlinkUtils__factory extends ContractFactory {
  constructor(...args: ChainlinkUtilsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ChainlinkUtils> {
    return super.deploy(overrides || {}) as Promise<ChainlinkUtils>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ChainlinkUtils {
    return super.attach(address) as ChainlinkUtils;
  }
  override connect(signer: Signer): ChainlinkUtils__factory {
    return super.connect(signer) as ChainlinkUtils__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ChainlinkUtilsInterface {
    return new utils.Interface(_abi) as ChainlinkUtilsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ChainlinkUtils {
    return new Contract(address, _abi, signerOrProvider) as ChainlinkUtils;
  }
}
