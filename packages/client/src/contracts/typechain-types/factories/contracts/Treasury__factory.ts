/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { Treasury, TreasuryInterface } from "../../contracts/Treasury";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_usdToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "_blxToken",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "BlxBurned",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "addTrustedAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "product",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "derivativeId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "optionType",
        type: "uint256",
      },
    ],
    name: "adjCoeff",
    outputs: [
      {
        internalType: "int128",
        name: "coef",
        type: "int128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_staking",
        type: "address",
      },
      {
        internalType: "address",
        name: "_formulas",
        type: "address",
      },
    ],
    name: "configure",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "distributeProfit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "gapAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "getAmericanBalances",
    outputs: [
      {
        internalType: "uint256",
        name: "investments",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "payouts",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "product",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "derivativeId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "optionType",
        type: "uint256",
      },
    ],
    name: "getCollateralByOptionType",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "getDigitalBalances",
    outputs: [
      {
        internalType: "uint256",
        name: "investments",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "payouts",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "getPlatformProfits",
    outputs: [
      {
        internalType: "uint256",
        name: "digital",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "american",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "turbo",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "getTurboBalances",
    outputs: [
      {
        internalType: "uint256",
        name: "investments",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "payouts",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "product",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "derivativeId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "optionType",
        type: "uint256",
      },
    ],
    name: "get_r1",
    outputs: [
      {
        internalType: "int128",
        name: "r1",
        type: "int128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "product",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "derivativeId",
        type: "uint256",
      },
    ],
    name: "get_r2",
    outputs: [
      {
        internalType: "int128",
        name: "r2",
        type: "int128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "isTrustedAddress",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isTrustedCaller",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "derivativeId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "product",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "optionType",
        type: "uint256",
      },
    ],
    name: "lockBetCollateral",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "lostBlx",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lostUsd",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "reward",
        type: "uint256",
      },
    ],
    name: "notifyPlatformReward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "usd",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "blx",
        type: "uint256",
      },
    ],
    name: "onLooseRewards",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "payBlxTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "payTokensTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "platformOwnIncome",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "investment",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "payout",
        type: "uint256",
      },
      {
        internalType: "enum OptionLib.ProductKind",
        name: "product",
        type: "uint8",
      },
    ],
    name: "registerBalanceChange",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "removeTrustedAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "usdGap",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "blxGap",
        type: "uint256",
      },
    ],
    name: "setGapAmounts",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_beneficiary",
        type: "address",
      },
    ],
    name: "setPlatformBeneficiary",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "takeBlxFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "takeTokensFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "product",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "derivativeId",
        type: "uint256",
      },
    ],
    name: "totalCollateral",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "totalIncome",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "derivativeId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "product",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "optionType",
        type: "uint256",
      },
    ],
    name: "unlockBetCollateral",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "withdrawAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "burnAmount",
        type: "uint256",
      },
    ],
    name: "withdrawBlx",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum Treasury.RewardToken",
        name: "rewardToken",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdrawPlatformOwnIncome",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162002d8338038062002d83833981016040819052620000349162000156565b6200003f33620000f3565b6001600160a01b038216620000715760405162461bcd60e51b815260040162000068906200020c565b60405180910390fd5b6001600160a01b0381166200009a5760405162461bcd60e51b81526004016200006890620001fa565b62093a806010556002805462010000600160b01b031916620100006001600160a01b0394851602179055600380546001600160a01b0319908116928416929092179055600054600f80549190931691161790556200024a565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b8051620001508162000230565b92915050565b6000806040838503121562000169578182fd5b620001778483850162000143565b91506020620001898582860162000143565b9150509250929050565b60138152602081017f54523a424c585f5a45524f5f4144445245535300000000000000000000000000815290505b60200190565b60148152602081017f54523a555344435f5a45524f5f4144445245535300000000000000000000000081529050620001c1565b60208082528101620001508162000193565b602080825281016200015081620001c7565b60006001600160a01b03821662000150565b6200023b816200021e565b81146200024757600080fd5b50565b612b29806200025a6000396000f3fe608060405234801561001057600080fd5b506004361061025c5760003560e01c8063a6b0e81011610145578063d68983c7116100bd578063e70212541161008c578063f942fa8011610071578063f942fa801461054e578063f9f494ed14610557578063fe6215051461056a57600080fd5b8063e702125414610528578063f2fde38b1461053b57600080fd5b8063d68983c7146104e6578063d6e46270146104f9578063e470d5cf1461050c578063e5486d3a1461051f57600080fd5b8063be1edcfb11610114578063c1d3a826116100f9578063c1d3a826146104ad578063c8df4273146104c0578063d46e6734146104d357600080fd5b8063be1edcfb14610487578063c06f150e1461049a57600080fd5b8063a6b0e8101461042e578063ab4637e514610441578063ae1ed08f14610454578063bb27ff5c1461046757600080fd5b8063715018a6116101d85780638a160b54116101a7578063911ff80b1161018c578063911ff80b146103d95780639b157530146103fb5780639ed3bf271461041b57600080fd5b80638a160b54146103b85780638da5cb5b146103c057600080fd5b8063715018a61461036a57806379ac8ad91461037257806383db232614610385578063862ba05f1461039857600080fd5b8063371f0a591161022f578063523a4fe911610214578063523a4fe91461032c57806353c395811461033f5780635523852f1461035757600080fd5b8063371f0a59146102f85780634fabefb61461030b57600080fd5b80630848a136146102615780630b86cf40146102a357806320530903146102c35780632ec5da89146102d8575b600080fd5b61028d61026f366004611f16565b6001600160a01b031660009081526001602052604090205460ff1690565b60405161029a91906127e3565b60405180910390f35b6102b66102b13660046120b8565b61057d565b60405161029a91906127f1565b6102d66102d13660046120b8565b6106a8565b005b6102eb6102e63660046120d6565b61070b565b60405161029a91906129e9565b6102d6610306366004611f6b565b61078b565b61031e610319366004611f16565b6107f5565b60405161029a9291906129f7565b6102d661033a3660046120f6565b61086c565b3360009081526001602052604090205460ff1661028d565b6102b66103653660046120d6565b610900565b6102d6610a54565b6102d66103803660046120b8565b610a68565b6102d66103933660046120f6565b610aa6565b6102eb6103a6366004611f16565b60096020526000908152604090205481565b6102d6610bb9565b6000546001600160a01b031660405161029a9190612777565b6103ec6103e7366004611f16565b610d9a565b60405161029a93929190612a05565b6102eb610409366004611f16565b600a6020526000908152604090205481565b61031e610429366004611f16565b610dff565b6102d661043c366004611f6b565b610e23565b6102d661044f366004612060565b610e69565b6102d6610462366004611f6b565b610f48565b6102eb610475366004611f16565b600b6020526000908152604090205481565b6102eb6104953660046120b8565b610fb4565b6102d66104a8366004611f6b565b61102b565b6102d66104bb366004611fe4565b611077565b6102b66104ce3660046120d6565b611125565b6102d66104e1366004611f16565b6111e7565b6102d66104f4366004611f99565b611244565b6102d6610507366004611f6b565b611352565b6102d661051a366004611f33565b61137a565b6102eb600c5481565b61031e610536366004611f16565b6114c6565b6102d6610549366004611f16565b6114e9565b6102eb600d5481565b6102d6610565366004611f16565b611523565b6102d6610578366004611f16565b61154c565b60048054604080517f132779cf000000000000000000000000000000000000000000000000000000008152905160009384936001600160a01b03169263132779cf9281830192602092829003018186803b1580156105da57600080fd5b505afa1580156105ee573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610612919061209b565b90508061063a5760405162461bcd60e51b815260040161063190612859565b60405180910390fd5b6106796040518060400160405280600f81526020017f746f74616c5374616b65203d20256400000000000000000000000000000000008152508261157b565b6106a0610685826115ee565b6106976106928787610fb4565b6115ee565b600f0b9061160c565b949350505050565b3360009081526001602052604090205460ff166106d75760405162461bcd60e51b8152600401610631906128d9565b81600c60008282546106e99190612a20565b9250508190555080600d60008282546107029190612a20565b90915550505050565b600061071684611694565b156107685760008481526007602090815260408083208684528252918290208251808401909352805483526001908101549183019190915283141561075d57519050610784565b602001519050610784565b5060008381526008602090815260408083208584529091529020545b9392505050565b3360009081526001602052604090205460ff166107ba5760405162461bcd60e51b8152600401610631906128d9565b600081116107da5760405162461bcd60e51b8152600401610631906129b9565b6003546107f1906001600160a01b031683836116ba565b5050565b6001600160a01b0381166000908152600e60205260408120819081908160015b600281111561083457634e487b7160e01b600052602160045260246000fd5b815260208082019290925260409081016000208151808301909252805480835260019091015491909201819052909590945092505050565b3360009081526001602052604090205460ff1661089b5760405162461bcd60e51b8152600401610631906128d9565b8360065410156108bd5760405162461bcd60e51b815260040161063190612869565b83600660008282546108cf9190612a38565b90915550600090506108e283858461070b565b90506108f98385846108f48986612a38565b611842565b5050505050565b600061090d826002101590565b6109295760405162461bcd60e51b815260040161063190612909565b6002821415610942575068010000000000000000610784565b6000848152600760209081526040808320868452825280832081518083019092528054825260010154918101919091529061097d8686610fb4565b905080610997576801000000000000000092505050610784565b600060018514156109aa575081516109b6565b846109b6575060208201515b6109f56040518060400160405280600c81526020017f636f6e7472616374206b3a2000000000000000000000000000000000000000008152508261157b565b610a346040518060400160405280600c81526020017f636f6e7472616374206c3a2000000000000000000000000000000000000000008152508361157b565b610a49610a40836115ee565b610697836115ee565b979650505050505050565b610a5c6118a3565b610a6660006118cd565b565b610a706118a3565b6002546001600160a01b036201000090910481166000908152600a60205260408082209490945560035490911681529190912055565b3360009081526001602052604090205460ff16610ad55760405162461bcd60e51b8152600401610631906128d9565b600084600654610ae59190612a20565b6002546040516370a0823160e01b81529192508291620100009091046001600160a01b0316906370a0823190610b1f903090600401612777565b60206040518083038186803b158015610b3757600080fd5b505afa158015610b4b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b6f919061209b565b1015610b8d5760405162461bcd60e51b8152600401610631906128c9565b60068190556000610b9f84868561070b565b9050610bb18486856108f48a86612a20565b505050505050565b601054601154610bc99190612a20565b421015610be85760405162461bcd60e51b8152600401610631906129a9565b426011556002546040516370a0823160e01b81526000916201000090046001600160a01b0316906370a0823190610c23903090600401612777565b60206040518083038186803b158015610c3b57600080fd5b505afa158015610c4f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c73919061209b565b6002549091506201000090046001600160a01b031660008080610c9584610d9a565b919450925090508481610ca88486612a20565b610cb29190612a20565b10610ccf5760405162461bcd60e51b815260040161063190612919565b600480546040517f06e328200000000000000000000000000000000000000000000000000000000081526001600160a01b039091169182916306e3282091610d1d9188918891889101612a05565b600060405180830381600087803b158015610d3757600080fd5b505af1158015610d4b573d6000803e3d6000fd5b5050506001600160a01b0386166000908152600e602090815260408083206001808552925280832083815582018390558280528083208381558201839055600283528220828155015550610bb1565b6000806000806000610dab866114c6565b91509150610db9828261192a565b94505050600080610dc9866107f5565b91509150610dd7828261192a565b93505050600080610de786610dff565b91509150610df5828261192a565b9496939550505050565b6001600160a01b0381166000908152600e6020526040812081908190816002610815565b3360009081526001602052604090205460ff16610e525760405162461bcd60e51b8152600401610631906128d9565b6003546107f1906001600160a01b03168383611944565b600f5433906001600160a01b03168114610e955760405162461bcd60e51b815260040161063190612959565b6000610ea084611a14565b6001600160a01b0381166000908152600a6020526040902054909150610ec69084612a20565b6001600160a01b0382166000908152600b60205260409020541015610efd5760405162461bcd60e51b815260040161063190612899565b600f54610f159082906001600160a01b031685611944565b6001600160a01b0381166000908152600b602052604081208054859290610f3d908490612a38565b909155505050505050565b3360009081526001602052604090205460ff16610f775760405162461bcd60e51b8152600401610631906128d9565b60008111610f975760405162461bcd60e51b8152600401610631906129b9565b6002546107f1906201000090046001600160a01b03168383611944565b6000610fbf83611694565b15611009576000838152600760209081526040808320858452825291829020825180840190935280548084526001909101549183018290526110019190612a20565b915050611025565b5060008281526008602090815260408083208484529091529020545b92915050565b3360009081526001602052604090205460ff1661105a5760405162461bcd60e51b8152600401610631906128d9565b6002546107f1906201000090046001600160a01b031683836116ba565b3360009081526001602052604090205460ff166110a65760405162461bcd60e51b8152600401610631906128d9565b60025484906001600160a01b03808316620100009092041614806110d757506003546001600160a01b038281169116145b6110f35760405162461bcd60e51b8152600401610631906129d9565b816110fd81611aa8565b6111195760405162461bcd60e51b815260040161063190612989565b610bb186868686611b24565b600080611132858561057d565b90506000611141868686610900565b6005546040517f4cd1224f0000000000000000000000000000000000000000000000000000000081529192506001600160a01b031690634cd1224f9061118d90849086906004016127ff565b60206040518083038186803b1580156111a557600080fd5b505afa1580156111b9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111dd919061207e565b9695505050505050565b6111ef6118a3565b6001600160a01b0381166112155760405162461bcd60e51b815260040161063190612929565b600f805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b3360009081526001602052604090205460ff166112735760405162461bcd60e51b8152600401610631906128d9565b811561129057600354611290906001600160a01b03168484611944565b801561134d576003546040517f9dc29fac0000000000000000000000000000000000000000000000000000000081526001600160a01b0390911690639dc29fac906112e190869085906004016127c8565b600060405180830381600087803b1580156112fb57600080fd5b505af115801561130f573d6000803e3d6000fd5b505050507fb0ae13ed8f6711807081cda3b3dcc84db55be36f4f01e5d9d37f4d363cfdfca183826040516113449291906127c8565b60405180910390a15b505050565b6001600160a01b0382166000908152600b602052604081208054839290610702908490612a20565b6113826118a3565b600254610100900460ff16158080156113a25750600254600160ff909116105b806113bc5750303b1580156113bc575060025460ff166001145b6113d85760405162461bcd60e51b8152600401610631906128e9565b6002805460ff1916600117905580156113fb576002805461ff0019166101001790555b6001600160a01b0383166114215760405162461bcd60e51b8152600401610631906128f9565b6001600160a01b0382166114475760405162461bcd60e51b815260040161063190612889565b600480546001600160a01b0380861673ffffffffffffffffffffffffffffffffffffffff19928316179092556005805492851692909116919091179055801561134d576002805461ff00191690556040517f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498906113449060019061281a565b6001600160a01b0381166000908152600e60205260408120819081908180610815565b6114f16118a3565b6001600160a01b0381166115175760405162461bcd60e51b815260040161063190612879565b611520816118cd565b50565b61152b6118a3565b6001600160a01b03166000908152600160205260409020805460ff19169055565b6115546118a3565b6001600160a01b03166000908152600160208190526040909120805460ff19169091179055565b6107f18282604051602401611591929190612839565b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f9710a9d000000000000000000000000000000000000000000000000000000000179052611c9b565b6000677fffffffffffffff82111561160557600080fd5b5060401b90565b600081600f0b6000141561161f57600080fd5b600082600f0b604085600f0b901b8161164857634e487b7160e01b600052601260045260246000fd5b0590507fffffffffffffffffffffffffffffffff80000000000000000000000000000000811280159061168b57506f7fffffffffffffffffffffffffffffff8113155b61078457600080fd5b600060038214806116a55750600482145b156116b257506000919050565b506001919050565b600081116116da5760405162461bcd60e51b8152600401610631906128a9565b6040516370a0823160e01b815281906001600160a01b038516906370a0823190611708908690600401612777565b60206040518083038186803b15801561172057600080fd5b505afa158015611734573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611758919061209b565b10156117765760405162461bcd60e51b815260040161063190612969565b6040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815281906001600160a01b0385169063dd62ed3e906117bf9086903090600401612785565b60206040518083038186803b1580156117d757600080fd5b505afa1580156117eb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061180f919061209b565b101561182d5760405162461bcd60e51b815260040161063190612949565b61134d6001600160a01b038416833084611cbc565b61184b84611694565b156118845760008481526007602090815260408083208684529091529020600183141561187a57818155611882565b600181018290555b505b6000938452600860209081526040808620948652939052919092205550565b6000546001600160a01b03163314610a665760405162461bcd60e51b815260040161063190612939565b600080546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600081831161193a576000610784565b6107848284612a38565b600081116119645760405162461bcd60e51b8152600401610631906128a9565b6040516370a0823160e01b815281906001600160a01b038516906370a0823190611992903090600401612777565b60206040518083038186803b1580156119aa57600080fd5b505afa1580156119be573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119e2919061209b565b1015611a005760405162461bcd60e51b815260040161063190612979565b61134d6001600160a01b0384168383611d47565b60008080836001811115611a3857634e487b7160e01b600052602160045260246000fd5b1415611a5657506002546201000090046001600160a01b0316611025565b6001836001811115611a7857634e487b7160e01b600052602160045260246000fd5b1415611a9057506003546001600160a01b0316611025565b60405162461bcd60e51b8152600401610631906128b9565b6000816002811115611aca57634e487b7160e01b600052602160045260246000fd5b1580611af55750816002811115611af157634e487b7160e01b600052602160045260246000fd5b6001145b806110255750816002811115611b1b57634e487b7160e01b600052602160045260246000fd5b60021492915050565b60025484906001600160a01b0380831662010000909204161480611b5557506003546001600160a01b038281169116145b611b715760405162461bcd60e51b8152600401610631906129d9565b81611b7b81611aa8565b611b975760405162461bcd60e51b815260040161063190612989565b6001600160a01b0386166000908152600e602052604081208691856002811115611bd157634e487b7160e01b600052602160045260246000fd5b6002811115611bf057634e487b7160e01b600052602160045260246000fd5b81526020019081526020016000206000016000828254611c109190612a20565b90915550506001600160a01b0386166000908152600e602052604081208591856002811115611c4f57634e487b7160e01b600052602160045260246000fd5b6002811115611c6e57634e487b7160e01b600052602160045260246000fd5b81526020019081526020016000206001016000828254611c8e9190612a20565b9091555050505050505050565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b611d41846323b872dd60e01b858585604051602401611cdd939291906127a0565b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000090931692909217909152611d66565b50505050565b61134d8363a9059cbb60e01b8484604051602401611cdd9291906127c8565b6000611dbb826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316611df59092919063ffffffff16565b80519091501561134d5780806020019051810190611dd99190612043565b61134d5760405162461bcd60e51b8152600401610631906129c9565b60606106a08484600085856001600160a01b0385163b611e275760405162461bcd60e51b815260040161063190612999565b600080866001600160a01b03168587604051611e43919061276d565b60006040518083038185875af1925050503d8060008114611e80576040519150601f19603f3d011682016040523d82523d6000602084013e611e85565b606091505b5091509150610a4982828660608315611e9f575081610784565b825115611eaf5782518084602001fd5b8160405162461bcd60e51b81526004016106319190612828565b803561102581612aad565b805161102581612ac1565b803561102581612ac9565b803561102581612ad6565b805161102581612ae3565b803561102581612aed565b805161102581612aed565b600060208284031215611f27578081fd5b61078483828401611ec9565b60008060408385031215611f45578081fd5b611f5184828501611ec9565b91506020611f6185828601611ec9565b9150509250929050565b60008060408385031215611f7d578182fd5b611f8984838501611ec9565b91506020611f6185828601611f00565b600080600060608486031215611fad578081fd5b611fb985828601611ec9565b92506020611fc986828701611f00565b9250506040611fda86828701611f00565b9150509250925092565b60008060008060808587031215611ff9578081fd5b61200586828701611ec9565b9350602061201587828801611f00565b935050604061202687828801611f00565b925050606061203787828801611edf565b91505092959194509250565b600060208284031215612054578081fd5b61078483828401611ed4565b60008060408385031215612072578182fd5b611f8984838501611eea565b60006020828403121561208f578081fd5b61078483828401611ef5565b6000602082840312156120ac578081fd5b61078483828401611f0b565b600080604083850312156120ca578182fd5b611f8984838501611f00565b6000806000606084860312156120ea578283fd5b611fb985848601611f00565b6000806000806080858703121561210b578384fd5b61211786858701611f00565b9350602061212787828801611f00565b935050604061213887828801611f00565b925050606061203787828801611f00565b61215281612a4f565b82525050565b801515612152565b600061216a825190565b612178818560208601612a6b565b9290920192915050565b61215281600f0b90565b61215281612a60565b600061219f825190565b8084526020840193506121b6818560208601612a6b565b601f01601f19169290920192915050565b60168152602081017f534f423a4e4f5f5354414b455f43414e545f43414c4300000000000000000000815290505b60200190565b60208082527f4f423a43414e4e4f545f465245455f434f4c4c41544552414c5f414d4f554e5491019081526121f5565b60268152602081017f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206181527f6464726573730000000000000000000000000000000000000000000000000000602082015290505b60400190565b60188152602081017f54523a464f524d554c41535f5a45524f5f414444524553530000000000000000815290506121f5565b601d8152602081017f4e6f7420656e6f75676820746f6b656e7320746f207769746864726177000000815290506121f5565b600f8152602081017f534f423a5a45524f5f414d4f554e540000000000000000000000000000000000815290506121f5565b60188152602081017f746f6b656e206b696e64206e6f7420737570706f727465640000000000000000815290506121f5565b601d8152602081017f4f423a544f4f5f4d5543485f434f4c4c41544552414c5f4c4f434b4544000000815290506121f5565b60198152602081017f41433a414444524553535f49535f4e4f545f5452555354454400000000000000815290506121f5565b602e8152602081017f496e697469616c697a61626c653a20636f6e747261637420697320616c72656181527f647920696e697469616c697a65640000000000000000000000000000000000006020820152905061227f565b60178152602081017f54523a5354414b494e475f5a45524f5f41444452455353000000000000000000815290506121f5565b60178152602081017f534f423a494e56414c49445f4f5054494f4e5f54595045000000000000000000815290506121f5565b601c8152602081017f54523a4e4f545f454e4f5547485f5553445f4449535452494255544500000000815290506121f5565b60228152602081017f42656e65666963696172792063616e6e6f74206265207a65726f20616464726581527f73730000000000000000000000000000000000000000000000000000000000006020820152905061227f565b60208082527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657291019081526121f5565b60198152602081017f534f423a5553525f4e4f545f454e4f5547485f414c4c574e4300000000000000815290506121f5565b60228152602081017f6f6e6c7920706c6174666f726d2062656e65666963696172792063616e20636181527f6c6c0000000000000000000000000000000000000000000000000000000000006020820152905061227f565b60188152602081017f534f423a5553525f4e4f545f454e4f5547485f544f4b454e0000000000000000815290506121f5565b60188152602081017f534f423a5359535f4e4f545f454e4f5547485f544f4b454e0000000000000000815290506121f5565b60168152602081017f54523a554e535550504f525445445f50524f4455435400000000000000000000815290506121f5565b601d8152602081017f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000815290506121f5565b601c8152602081017f54523a444953545249425554494f4e5f504552494f445f4552524f5200000000815290506121f5565b60128152602081017f54523a5041595f5a45524f5f414d4f554e540000000000000000000000000000815290506121f5565b602a8152602081017f5361666545524332303a204552433230206f7065726174696f6e20646964206e81527f6f742073756363656564000000000000000000000000000000000000000000006020820152905061227f565b60148152602081017f54523a554e535550504f525445445f544f4b454e000000000000000000000000815290506121f5565b80612152565b6110258183612160565b602081016110258284612149565b604081016127938285612149565b6107846020830184612149565b606081016127ae8286612149565b6127bb6020830185612149565b6106a06040830184612767565b604081016127d68285612149565b6107846020830184612767565b602081016110258284612158565b602081016110258284612182565b6040810161280d8285612182565b6107846020830184612182565b60208101611025828461218c565b602080825281016107848184612195565b6040808252810161284a8185612195565b90506107846020830184612767565b60208082528101611025816121c7565b60208082528101611025816121fb565b602080825281016110258161222b565b6020808252810161102581612285565b60208082528101611025816122b7565b60208082528101611025816122e9565b602080825281016110258161231b565b602080825281016110258161234d565b602080825281016110258161237f565b60208082528101611025816123b1565b6020808252810161102581612409565b602080825281016110258161243b565b602080825281016110258161246d565b602080825281016110258161249f565b60208082528101611025816124f7565b6020808252810161102581612527565b6020808252810161102581612559565b60208082528101611025816125b1565b60208082528101611025816125e3565b6020808252810161102581612615565b6020808252810161102581612647565b6020808252810161102581612679565b60208082528101611025816126ab565b60208082528101611025816126dd565b6020808252810161102581612735565b602081016110258284612767565b604081016127d68285612767565b60608101612a138286612767565b6127bb6020830185612767565b60008219821115612a3357612a33612a97565b500190565b600082821015612a4a57612a4a612a97565b500390565b60006001600160a01b038216611025565b600060ff8216611025565b60005b83811015612a86578181015183820152602001612a6e565b83811115611d415750506000910152565b634e487b7160e01b600052601160045260246000fd5b612ab681612a4f565b811461152057600080fd5b801515612ab6565b6003811061152057600080fd5b6002811061152057600080fd5b612ab681600f0b90565b80612ab656fea26469706673582212208c06dfe0e8cb42c5c8ed1a5cc5abf29b89175323389805fd64ee11a831a3495964736f6c63430008040033";

type TreasuryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TreasuryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Treasury__factory extends ContractFactory {
  constructor(...args: TreasuryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _usdToken: PromiseOrValue<string>,
    _blxToken: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Treasury> {
    return super.deploy(
      _usdToken,
      _blxToken,
      overrides || {}
    ) as Promise<Treasury>;
  }
  override getDeployTransaction(
    _usdToken: PromiseOrValue<string>,
    _blxToken: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_usdToken, _blxToken, overrides || {});
  }
  override attach(address: string): Treasury {
    return super.attach(address) as Treasury;
  }
  override connect(signer: Signer): Treasury__factory {
    return super.connect(signer) as Treasury__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TreasuryInterface {
    return new utils.Interface(_abi) as TreasuryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Treasury {
    return new Contract(address, _abi, signerOrProvider) as Treasury;
  }
}
