/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  LinkToken,
  LinkTokenInterface,
} from "../../../contracts/LinkToken.sol/LinkToken";

const _abi = [
  {
    constant: true,
    inputs: [],
    name: "name",
    outputs: [
      {
        name: "",
        type: "string",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        name: "_spender",
        type: "address",
      },
      {
        name: "_value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        name: "",
        type: "bool",
      },
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        name: "_from",
        type: "address",
      },
      {
        name: "_to",
        type: "address",
      },
      {
        name: "_value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        name: "",
        type: "bool",
      },
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "decimals",
    outputs: [
      {
        name: "",
        type: "uint8",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        name: "_to",
        type: "address",
      },
      {
        name: "_value",
        type: "uint256",
      },
      {
        name: "_data",
        type: "bytes",
      },
    ],
    name: "transferAndCall",
    outputs: [
      {
        name: "success",
        type: "bool",
      },
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        name: "_spender",
        type: "address",
      },
      {
        name: "_subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseApproval",
    outputs: [
      {
        name: "success",
        type: "bool",
      },
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        name: "_owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        name: "balance",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "symbol",
    outputs: [
      {
        name: "",
        type: "string",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        name: "_to",
        type: "address",
      },
      {
        name: "_value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        name: "success",
        type: "bool",
      },
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        name: "_spender",
        type: "address",
      },
      {
        name: "_addedValue",
        type: "uint256",
      },
    ],
    name: "increaseApproval",
    outputs: [
      {
        name: "success",
        type: "bool",
      },
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        name: "_owner",
        type: "address",
      },
      {
        name: "_spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        name: "remaining",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        name: "value",
        type: "uint256",
      },
      {
        indexed: false,
        name: "data",
        type: "bytes",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
];

const _bytecode =
  "0x6060604052341561000f57600080fd5b5b600160a060020a03331660009081526001602052604090206b033b2e3c9fd0803ce800000090555b5b610bf3806100486000396000f3006060604052361561009e5763ffffffff60e060020a60003504166306fdde0381146100a3578063095ea7b31461012e57806318160ddd1461016457806323b872dd14610189578063313ce567146101c55780634000aea0146101ee578063661884631461026757806370a082311461029d57806395d89b41146102ce578063a9059cbb14610359578063d73dd6231461038f578063dd62ed3e146103c5575b600080fd5b34156100ae57600080fd5b6100b66103fc565b60405160208082528190810183818151815260200191508051906020019080838360005b838110156100f35780820151818401525b6020016100da565b50505050905090810190601f1680156101205780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561013957600080fd5b610150600160a060020a0360043516602435610433565b604051901515815260200160405180910390f35b341561016f57600080fd5b610177610480565b60405190815260200160405180910390f35b341561019457600080fd5b610150600160a060020a0360043581169060243516604435610490565b604051901515815260200160405180910390f35b34156101d057600080fd5b6101d86104df565b60405160ff909116815260200160405180910390f35b34156101f957600080fd5b61015060048035600160a060020a03169060248035919060649060443590810190830135806020601f820181900481020160405190810160405281815292919060208401838380828437509496506104e495505050505050565b604051901515815260200160405180910390f35b341561027257600080fd5b610150600160a060020a0360043516602435610533565b604051901515815260200160405180910390f35b34156102a857600080fd5b610177600160a060020a036004351661061d565b60405190815260200160405180910390f35b34156102d957600080fd5b6100b661063c565b60405160208082528190810183818151815260200191508051906020019080838360005b838110156100f35780820151818401525b6020016100da565b50505050905090810190601f1680156101205780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561036457600080fd5b610150600160a060020a036004351660243561065d565b604051901515815260200160405180910390f35b341561039a57600080fd5b610150600160a060020a03600435166024356106aa565b604051901515815260200160405180910390f35b34156103d057600080fd5b610177600160a060020a036004358116906024351661073d565b60405190815260200160405180910390f35b60408051908101604052600f81527f436861696e4c696e6b20546f6b656e0000000000000000000000000000000000602082015281565b600082600160a060020a03811615801590610460575030600160a060020a031681600160a060020a031614155b151561046b57600080fd5b610475848461076a565b91505b5b5092915050565b6b033b2e3c9fd0803ce800000081565b600082600160a060020a038116158015906104bd575030600160a060020a031681600160a060020a031614155b15156104c857600080fd5b6104d38585856107c5565b91505b5b509392505050565b601281565b600083600160a060020a03811615801590610511575030600160a060020a031681600160a060020a031614155b151561051c57600080fd5b6104d38585856108d7565b91505b5b509392505050565b600160a060020a0333811660009081526002602090815260408083209386168352929052908120548083111561059057600160a060020a0333811660009081526002602090815260408083209388168352929052908120556105c7565b6105a0818463ffffffff6109be16565b600160a060020a033381166000908152600260209081526040808320938916835292905220555b600160a060020a033381166000818152600260209081526040808320948916808452949091529081902054600080516020610ba8833981519152915190815260200160405180910390a3600191505b5092915050565b600160a060020a0381166000908152600160205260409020545b919050565b604080519081016040526004815260e060020a634c494e4b02602082015281565b600082600160a060020a0381161580159061068a575030600160a060020a031681600160a060020a031614155b151561069557600080fd5b61047584846109d5565b91505b5b5092915050565b600160a060020a0333811660009081526002602090815260408083209386168352929052908120546106e2908363ffffffff610a9516565b600160a060020a033381166000818152600260209081526040808320948916808452949091529081902084905591929091600080516020610ba883398151915291905190815260200160405180910390a35060015b92915050565b600160a060020a038083166000908152600260209081526040808320938516835292905220545b92915050565b600160a060020a0333811660008181526002602090815260408083209487168084529490915280822085905590929190600080516020610ba88339815191529085905190815260200160405180910390a35060015b92915050565b600160a060020a038084166000818152600260209081526040808320339095168352938152838220549282526001905291822054610809908463ffffffff6109be16565b600160a060020a03808716600090815260016020526040808220939093559086168152205461083e908463ffffffff610a9516565b600160a060020a038516600090815260016020526040902055610867818463ffffffff6109be16565b600160a060020a03808716600081815260026020908152604080832033861684529091529081902093909355908616917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9086905190815260200160405180910390a3600191505b509392505050565b60006108e384846109d5565b5083600160a060020a031633600160a060020a03167fe19260aff97b920c7df27010903aeb9c8d2be5d310a2c67824cf3f15396e4c16858560405182815260406020820181815290820183818151815260200191508051906020019080838360005b8381101561095e5780820151818401525b602001610945565b50505050905090810190601f16801561098b5780820380516001836020036101000a031916815260200191505b50935050505060405180910390a36109a284610aaf565b156109b2576109b2848484610abe565b5b5060015b9392505050565b6000828211156109ca57fe5b508082035b92915050565b600160a060020a0333166000908152600160205260408120546109fe908363ffffffff6109be16565b600160a060020a033381166000908152600160205260408082209390935590851681522054610a33908363ffffffff610a9516565b600160a060020a0380851660008181526001602052604090819020939093559133909116907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9085905190815260200160405180910390a35060015b92915050565b600082820183811015610aa457fe5b8091505b5092915050565b6000813b908111905b50919050565b82600160a060020a03811663a4c0ed363385856040518463ffffffff1660e060020a0281526004018084600160a060020a0316600160a060020a0316815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015610b3f5780820151818401525b602001610b26565b50505050905090810190601f168015610b6c5780820380516001836020036101000a031916815260200191505b50945050505050600060405180830381600087803b1515610b8c57600080fd5b6102c65a03f11515610b9d57600080fd5b5050505b5050505056008c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925a165627a7a72305820645c85070a4d0c3e3912ca5b767bd00e0bbc3efb6c6dca6d3db56be4ee72eaac0029";

type LinkTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LinkTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class LinkToken__factory extends ContractFactory {
  constructor(...args: LinkTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<LinkToken> {
    return super.deploy(overrides || {}) as Promise<LinkToken>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): LinkToken {
    return super.attach(address) as LinkToken;
  }
  override connect(signer: Signer): LinkToken__factory {
    return super.connect(signer) as LinkToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LinkTokenInterface {
    return new utils.Interface(_abi) as LinkTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): LinkToken {
    return new Contract(address, _abi, signerOrProvider) as LinkToken;
  }
}
