/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  HistoryVolatility,
  HistoryVolatilityInterface,
} from "../../../contracts/formulas/HistoryVolatility";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "market",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "symbol",
        type: "string",
      },
    ],
    name: "AddNewDerivative",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
    ],
    name: "ChainlinkCancelled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
    ],
    name: "ChainlinkFulfilled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
    ],
    name: "ChainlinkRequested",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "productId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "int128",
        name: "value",
        type: "int128",
      },
    ],
    name: "SetHistoryVolatility",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "SetPrice",
    type: "event",
  },
  {
    inputs: [],
    name: "DEFAULT_WINDOW_SIZE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_market",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
    ],
    name: "addDerivative",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string[]",
        name: "markets",
        type: "string[]",
      },
      {
        internalType: "string[]",
        name: "symbols",
        type: "string[]",
      },
    ],
    name: "addMultipleDerivatives",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_operator",
        type: "address",
      },
    ],
    name: "allowOperator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "derivatives",
    outputs: [
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        internalType: "int128",
        name: "historyVolatility",
        type: "int128",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        internalType: "string",
        name: "market",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCountDerivative",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "derivativeId",
        type: "uint256",
      },
    ],
    name: "getDerivative",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "int128",
        name: "",
        type: "int128",
      },
      {
        internalType: "string",
        name: "",
        type: "string",
      },
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "derivativeId",
        type: "uint256",
      },
    ],
    name: "getDerivativePrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_derivativeId",
        type: "uint256",
      },
    ],
    name: "getHistoryVolatility",
    outputs: [
      {
        internalType: "int128",
        name: "",
        type: "int128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_derivativeId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_maturity",
        type: "uint256",
      },
    ],
    name: "getScaledVolatility",
    outputs: [
      {
        internalType: "int128",
        name: "",
        type: "int128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_operator",
        type: "address",
      },
    ],
    name: "isOperator",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_operator",
        type: "address",
      },
    ],
    name: "removeOperator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_derivativeId",
        type: "uint256",
      },
      {
        internalType: "int128",
        name: "_historyVolatility",
        type: "int128",
      },
    ],
    name: "setHistoryVolatility",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int128[]",
        name: "_historyVolatility",
        type: "int128[]",
      },
    ],
    name: "setMultipleHistoryVolatility",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newWindowSize",
        type: "uint256",
      },
    ],
    name: "setWindowSize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "newPrices",
        type: "uint256[]",
      },
    ],
    name: "updatePrices",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "derivativeId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "newPrice",
        type: "uint256",
      },
    ],
    name: "updateSinglePrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "windowSize",
    outputs: [
      {
        internalType: "int128",
        name: "",
        type: "int128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405260016005553480156200001657600080fd5b50620000223362000065565b6200003a610e10620000b560201b62000f801760201c565b60088054600f9290920b6001600160801b03166001600160801b0319909216919091179055620000d3565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600060016001603f1b03821115620000cc57600080fd5b5060401b90565b611d2980620000e36000396000f3fe608060405234801561001057600080fd5b50600436106101775760003560e01c80638da5cb5b116100d8578063aaabc3151161008c578063cf00716f11610066578063cf00716f14610309578063ec5c0b2d1461031c578063f2fde38b1461032f57600080fd5b8063aaabc315146102d0578063ac8a584a146102e3578063c0046e39146102f657600080fd5b80638e365978116100bd5780638e365978146102875780639743eae61461029a578063a00b54b4146102bd57600080fd5b80638da5cb5b1461025b5780638e0ac3401461027457600080fd5b80635c2dc3d51161012f578063715018a611610114578063715018a61461023d5780637a3ead30146102455780638a14117a1461024e57600080fd5b80635c2dc3d5146101f15780636d70f7ae1461020457600080fd5b80631ba9a458116101605780631ba9a458146101ba5780632a1623be146101cd5780633bdde4f9146101e057600080fd5b806306cf9def1461017c578063109b6143146101a5575b600080fd5b61018f61018a366004611743565b610342565b60405161019c91906119c1565b60405180910390f35b6101b86101b3366004611606565b6103ae565b005b6101b86101c83660046115e9565b610503565b6101b86101db3660046116e5565b610555565b6009545b60405161019c9190611ad5565b61018f6101ff36600461178e565b6106c6565b6102306102123660046115e9565b6001600160a01b031660009081526007602052604090205460ff1690565b60405161019c91906119b3565b6101b861073e565b6101e4610e1081565b60085461018f90600f0b81565b6000546001600160a01b031660405161019c91906119a5565b6101b8610282366004611760565b610752565b6101b861029536600461163b565b61082d565b6102ad6102a8366004611743565b610a0a565b60405161019c9493929190611b05565b6101b86102cb36600461178e565b610c0e565b6101b86102de366004611743565b610c6a565b6101b86102f13660046115e9565b610ca4565b6102ad610304366004611743565b610cf3565b6101b86103173660046116a3565b610e45565b6101e461032a366004611743565b610ee4565b6101b861033d3660046115e9565b610f46565b6009546000908211156103705760405162461bcd60e51b815260040161036790611a14565b60405180910390fd5b6009828154811061039157634e487b7160e01b600052603260045260246000fd5b6000918252602090912060016004909202010154600f0b92915050565b3360009081526007602052604090205460ff166103dd5760405162461bcd60e51b815260040161036790611ac5565b805160095410156104005760405162461bcd60e51b815260040161036790611a34565b60005b81518110156104ff5781818151811061042c57634e487b7160e01b600052603260045260246000fd5b60200260200101516009828154811061045557634e487b7160e01b600052603260045260246000fd5b906000526020600020906004020160010160006101000a8154816001600160801b030219169083600f0b6001600160801b031602179055507fa964741cacc7ec7c8ff8bc6d6e112217a37c733ca05deba5632486728988279e818383815181106104cf57634e487b7160e01b600052603260045260246000fd5b60200260200101516040516104e5929190611ae3565b60405180910390a1806104f781611c72565b915050610403565b5050565b61050b610f9e565b6001600160a01b0381166105315760405162461bcd60e51b815260040161036790611aa5565b6001600160a01b03166000908152600760205260409020805460ff19166001179055565b3360009081526007602052604090205460ff166105845760405162461bcd60e51b815260040161036790611ac5565b604080516080810182526000808252602080830182815293830185815260608401879052600980546001810182559352835160049093027f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af810193845594517f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7b086018054600f9290920b6001600160801b03166fffffffffffffffffffffffffffffffff199092169190911790555180519394929361066a937f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7b101929190910190611370565b5060608201518051610686916003840191602090910190611370565b5050507fc831e0bacfc62fea9c9b08bd7e3d932d0311549c44f0a106ff8faa04312a27ee82826040516106ba9291906119cf565b60405180910390a15050565b6000610735600984815481106106ec57634e487b7160e01b600052603260045260246000fd5b6000918252602090912060016004909202010154600854600f91820b9161072c91610724910b61071b87610f80565b600f0b90610fc8565b600f0b611041565b600f0b90611063565b90505b92915050565b610746610f9e565b61075060006110ab565b565b3360009081526007602052604090205460ff166107815760405162461bcd60e51b815260040161036790611ac5565b60095482106107a25760405162461bcd60e51b815260040161036790611a24565b80600983815481106107c457634e487b7160e01b600052603260045260246000fd5b906000526020600020906004020160010160006101000a8154816001600160801b030219169083600f0b6001600160801b031602179055507fa964741cacc7ec7c8ff8bc6d6e112217a37c733ca05deba5632486728988279e82826040516106ba929190611ae3565b3360009081526007602052604090205460ff1661085c5760405162461bcd60e51b815260040161036790611ac5565b60005b8151811015610a055760096040518060800160405280600081526020016000600f0b81526020018484815181106108a657634e487b7160e01b600052603260045260246000fd5b602002602001015181526020018584815181106108d357634e487b7160e01b600052603260045260246000fd5b6020908102919091018101519091528254600181810185556000948552938290208351600490920201908155828201519381018054600f9590950b6001600160801b03166fffffffffffffffffffffffffffffffff19909516949094179093556040820151805192939261094d9260028501920190611370565b5060608201518051610969916003840191602090910190611370565b5050507fc831e0bacfc62fea9c9b08bd7e3d932d0311549c44f0a106ff8faa04312a27ee8382815181106109ad57634e487b7160e01b600052603260045260246000fd5b60200260200101518383815181106109d557634e487b7160e01b600052603260045260246000fd5b60200260200101516040516109eb9291906119cf565b60405180910390a1806109fd81611c72565b91505061085f565b505050565b60008060608060098581548110610a3157634e487b7160e01b600052603260045260246000fd5b90600052602060002090600402016000015460098681548110610a6457634e487b7160e01b600052603260045260246000fd5b906000526020600020906004020160010160009054906101000a9004600f0b60098781548110610aa457634e487b7160e01b600052603260045260246000fd5b906000526020600020906004020160020160098881548110610ad657634e487b7160e01b600052603260045260246000fd5b9060005260206000209060040201600301818054610af390611c1e565b80601f0160208091040260200160405190810160405280929190818152602001828054610b1f90611c1e565b8015610b6c5780601f10610b4157610100808354040283529160200191610b6c565b820191906000526020600020905b815481529060010190602001808311610b4f57829003601f168201915b50505050509150808054610b7f90611c1e565b80601f0160208091040260200160405190810160405280929190818152602001828054610bab90611c1e565b8015610bf85780601f10610bcd57610100808354040283529160200191610bf8565b820191906000526020600020905b815481529060010190602001808311610bdb57829003601f168201915b5050505050905093509350935093509193509193565b3360009081526007602052604090205460ff16610c3d5760405162461bcd60e51b815260040161036790611ac5565b60095482908110610c605760405162461bcd60e51b8152600401610367906119f4565b610a058383611113565b610c7381610f80565b60088054600f9290920b6001600160801b03166fffffffffffffffffffffffffffffffff1990921691909117905550565b610cac610f9e565b6001600160a01b038116610cd25760405162461bcd60e51b815260040161036790611aa5565b6001600160a01b03166000908152600760205260409020805460ff19169055565b60098181548110610d0357600080fd5b6000918252602090912060049091020180546001820154600283018054929450600f9190910b9291610d3490611c1e565b80601f0160208091040260200160405190810160405280929190818152602001828054610d6090611c1e565b8015610dad5780601f10610d8257610100808354040283529160200191610dad565b820191906000526020600020905b815481529060010190602001808311610d9057829003601f168201915b505050505090806003018054610dc290611c1e565b80601f0160208091040260200160405190810160405280929190818152602001828054610dee90611c1e565b8015610e3b5780601f10610e1057610100808354040283529160200191610e3b565b820191906000526020600020905b815481529060010190602001808311610e1e57829003601f168201915b5050505050905084565b3360009081526007602052604090205460ff16610e745760405162461bcd60e51b815260040161036790611ac5565b6009548114610e955760405162461bcd60e51b815260040161036790611a04565b60005b600954811015610a0557610ed281848484818110610ec657634e487b7160e01b600052603260045260246000fd5b90506020020135611113565b80610edc81611c72565b915050610e98565b60095460009082908110610f0a5760405162461bcd60e51b8152600401610367906119f4565b60098381548110610f2b57634e487b7160e01b600052603260045260246000fd5b90600052602060002090600402016000015491505b50919050565b610f4e610f9e565b6001600160a01b038116610f745760405162461bcd60e51b815260040161036790611a44565b610f7d816110ab565b50565b6000677fffffffffffffff821115610f9757600080fd5b5060401b90565b6000546001600160a01b031633146107505760405162461bcd60e51b815260040161036790611ab5565b600081600f0b60001415610fdb57600080fd5b600082600f0b604085600f0b901b8161100457634e487b7160e01b600052601260045260246000fd5b0590506f7fffffffffffffffffffffffffffffff19811280159061103857506f7fffffffffffffffffffffffffffffff8113155b61073557600080fd5b60008082600f0b121561105357600080fd5b610738604083600f0b901b611178565b6000600f83810b9083900b0260401d6f7fffffffffffffffffffffffffffffff19811280159061103857506f7fffffffffffffffffffffffffffffff81131561073557600080fd5b600080546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b806009838154811061113557634e487b7160e01b600052603260045260246000fd5b60009182526020909120600490910201556040517ff9317dc3bc6dda0e00e43855c2c30847aeafb8dcea9d2ce86e9ce7a83d549f01906106ba9084908490611b50565b60008161118757506000919050565b81600170010000000000000000000000000000000082106111ad5760809190911c9060401b5b6801000000000000000082106111c85760409190911c9060201b5b64010000000082106111df5760209190911c9060101b5b6201000082106111f45760109190911c9060081b5b61010082106112085760089190911c9060041b5b6010821061121b5760049190911c9060021b5b600882106112275760011b5b600181858161124657634e487b7160e01b600052601260045260246000fd5b048201901c9050600181858161126c57634e487b7160e01b600052601260045260246000fd5b048201901c9050600181858161129257634e487b7160e01b600052601260045260246000fd5b048201901c905060018185816112b857634e487b7160e01b600052601260045260246000fd5b048201901c905060018185816112de57634e487b7160e01b600052601260045260246000fd5b048201901c9050600181858161130457634e487b7160e01b600052601260045260246000fd5b048201901c9050600181858161132a57634e487b7160e01b600052601260045260246000fd5b048201901c9050600081858161135057634e487b7160e01b600052601260045260246000fd5b0490508082106113605780611362565b815b95945050505050565b919050565b82805461137c90611c1e565b90600052602060002090601f01602090048101928261139e57600085556113e4565b82601f106113b757805160ff19168380011785556113e4565b828001600101855582156113e4579182015b828111156113e45782518255916020019190600101906113c9565b506113f09291506113f4565b5090565b5b808211156113f057600081556001016113f5565b600061141c61141784611b82565b611b6b565b9050808382526020820190508285602086028501111561143b57600080fd5b60005b858110156114655761145087836115b3565b8352602092830192919091019060010161143e565b5050509392505050565b600061147d61141784611b82565b9050808382526020820190508285602086028501111561149c57600080fd5b60005b8581101561146557813567ffffffffffffffff8111156114be57600080fd5b85016114ca88826115be565b845250602092830192919091019060010161149f565b60006114ee61141784611ba6565b90508281526020810184848401111561150657600080fd5b611511848285611be2565b509392505050565b803561073881611ccf565b600082601f830112611534578081fd5b8135611544848260208601611409565b949350505050565b600082601f83011261155c578081fd5b813561154484826020860161146f565b60008083601f84011261157d578182fd5b50813567ffffffffffffffff811115611594578182fd5b6020830191508360208202830111156115ac57600080fd5b9250929050565b803561073881611ce3565b600082601f8301126115ce578081fd5b81356115448482602086016114e0565b803561073881611ced565b6000602082840312156115fa578081fd5b61073583828401611519565b600060208284031215611617578081fd5b8082013567ffffffffffffffff81111561162f578182fd5b61154484828501611524565b6000806040838503121561164d578081fd5b8083013567ffffffffffffffff811115611665578182fd5b6116718582860161154c565b925050602083013567ffffffffffffffff81111561168d578182fd5b6116998582860161154c565b9150509250929050565b600080602083850312156116b5578182fd5b8183013567ffffffffffffffff8111156116cd578283fd5b6116d98582860161156c565b92509250509250929050565b600080604083850312156116f7578182fd5b8183013567ffffffffffffffff81111561170f578283fd5b61171b858286016115be565b925050602083013567ffffffffffffffff811115611737578182fd5b611699858286016115be565b600060208284031215611754578081fd5b610735838284016115de565b60008060408385031215611772578182fd5b61177e848385016115de565b91506020611699858286016115b3565b600080604083850312156117a0578182fd5b6117ac848385016115de565b91506020611699858286016115de565b6117c581611bd1565b82525050565b8015156117c5565b6117c581600f0b90565b60006117e7825190565b8084526020840193506117fe818560208601611bee565b601f01601f19169290920192915050565b60138152602081017f48563a49445f4f55545f4f465f424f554e445300000000000000000000000000815290505b60200190565b60138152602081017f48563a4c454e475448535f4d49534d41544348000000000000000000000000008152905061183d565b60188152602081017f48563a554e4b4e4f574e5f444552495641544956455f494400000000000000008152905061183d565b601d8152602081017f48563a4445524956415449564549445f4f55545f4f465f424f554e44530000008152905061183d565b60118152602081017f48563a41525241595f544f4f5f4c4f4e470000000000000000000000000000008152905061183d565b600f8152602081017f48563a5a45524f5f4144445245535300000000000000000000000000000000008152905061183d565b60208082527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572910190815261183d565b60158152602081017f48563a43414c4c45525f4e4f545f414c4c4f57454400000000000000000000008152905061183d565b806117c5565b6020810161073882846117bc565b6020810161073882846117cb565b6020810161073882846117d3565b604080825281016119e081856117dd565b9050818103602083015261154481846117dd565b602080825281016107388161180f565b6020808252810161073881611843565b6020808252810161073881611875565b60208082528101610738816118a7565b60208082528101610738816118d9565b6020808252810161073881602681527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160208201527f6464726573730000000000000000000000000000000000000000000000000000604082015260600190565b602080825281016107388161190b565b602080825281016107388161193d565b602080825281016107388161196d565b60208101610738828461199f565b60408101611af1828561199f565b611afe60208301846117d3565b9392505050565b60808101611b13828761199f565b611b2060208301866117d3565b8181036040830152611b3281856117dd565b90508181036060830152611b4681846117dd565b9695505050505050565b60408101611b5e828561199f565b611afe602083018461199f565b6000611b7660405190565b905061136b8282611c45565b600067ffffffffffffffff821115611b9c57611b9c611cb9565b5060209081020190565b600067ffffffffffffffff821115611bc057611bc0611cb9565b601f19601f83011660200192915050565b60006001600160a01b038216610738565b82818337506000910152565b60005b83811015611c09578181015183820152602001611bf1565b83811115611c18576000848401525b50505050565b600281046001821680611c3257607f821691505b60208210811415610f4057610f40611ca3565b601f19601f830116810181811067ffffffffffffffff82111715611c6b57611c6b611cb9565b6040525050565b6000600019821415611c8657611c86611c8d565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b611cd881611bd1565b8114610f7d57600080fd5b611cd881600f0b90565b80611cd856fea26469706673582212201fe362fcb67ba1c5855ee5555a5a6b906dc344c8aa2c3ded3db56a94def6f7ba64736f6c63430008040033";

type HistoryVolatilityConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: HistoryVolatilityConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class HistoryVolatility__factory extends ContractFactory {
  constructor(...args: HistoryVolatilityConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<HistoryVolatility> {
    return super.deploy(overrides || {}) as Promise<HistoryVolatility>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): HistoryVolatility {
    return super.attach(address) as HistoryVolatility;
  }
  override connect(signer: Signer): HistoryVolatility__factory {
    return super.connect(signer) as HistoryVolatility__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): HistoryVolatilityInterface {
    return new utils.Interface(_abi) as HistoryVolatilityInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): HistoryVolatility {
    return new Contract(address, _abi, signerOrProvider) as HistoryVolatility;
  }
}
