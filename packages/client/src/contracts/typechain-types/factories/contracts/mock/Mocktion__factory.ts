/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  Mocktion,
  MocktionInterface,
} from "../../../contracts/mock/Mocktion";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
    ],
    name: "ChainlinkCancelled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
    ],
    name: "ChainlinkFulfilled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
    ],
    name: "ChainlinkRequested",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_requestId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_investment",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_trader",
        type: "address",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
    ],
    name: "_betAdd",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_requestId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "_betClose",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_requestId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_min",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_max",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "_betCloseTouch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "market",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "investment",
        type: "uint256",
      },
    ],
    name: "betAdd",
    outputs: [
      {
        internalType: "bytes32",
        name: "requestId",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "market",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "betClose",
    outputs: [
      {
        internalType: "bytes32",
        name: "requestId",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "market",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "betCloseTouch",
    outputs: [
      {
        internalType: "bytes32",
        name: "requestId",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "betId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "bets",
    outputs: [
      {
        internalType: "address",
        name: "trader",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "investment",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "payoff",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "timeOpen",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "priceOpen",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "priceClose",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "min",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "max",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "status",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "fee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "history",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "jobId",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "oracle",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "price",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "result",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_jobId",
        type: "string",
      },
    ],
    name: "setJobId",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_oracle",
        type: "address",
      },
    ],
    name: "setOracle",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "source",
        type: "string",
      },
    ],
    name: "stringToBytes32",
    outputs: [
      {
        internalType: "bytes32",
        name: "_result",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x608060405260016004553480156200001657600080fd5b506200002162000052565b600980546001600160a01b03191673a010a31d5b53d9a2a7aa2b689a324b580dc1aab81790556000600b5562000169565b6200010173c89bd4e1632d3a43cb03aaad5262cbe4038bc5716001600160a01b03166338cc48316040518163ffffffff1660e01b815260040160206040518083038186803b158015620000a457600080fd5b505afa158015620000b9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000df919062000116565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b565b805162000110816200014f565b92915050565b60006020828403121562000128578081fd5b620001368382840162000103565b9392505050565b60006001600160a01b03821662000110565b6200015a816200013d565b81146200016657600080fd5b50565b611e8580620001796000396000f3fe608060405234801561001057600080fd5b506004361061011b5760003560e01c80636c87faf2116100b2578063a035b1fe11610081578063cfb5192811610066578063cfb5192814610250578063ddca3f4314610263578063eb3476421461026c57600080fd5b8063a035b1fe1461023e578063c2939d971461024757600080fd5b80636c87faf2146101d25780637adbf973146101e55780637dc0d1d01461021557806398daac831461023557600080fd5b8063236316e6116100ee578063236316e61461018d57806327bce91b146101ad5780633928b049146101b657806365372147146101c957600080fd5b806303f6b09214610120578063129fc1c01461013557806316529dea1461014857806322af00fa1461015b575b600080fd5b61013361012e366004611692565b61027f565b005b610133610143366004611782565b610443565b610133610156366004611647565b610452565b61016e610169366004611817565b6105dd565b6040516101849a99989796959493929190611a5c565b60405180910390f35b6101a061019b3660046117b7565b610746565b6040516101849190611afe565b6101a0600d5481565b6101a06101c43660046117b7565b6108ee565b6101a060085481565b6101a06101e03660046117b7565b610a6f565b6101336101f336600461160d565b600980546001600160a01b0319166001600160a01b0392909216919091179055565b600954610228906001600160a01b031681565b60405161018491906119a4565b6101a060075481565b6101a060065481565b6101a0600a5481565b6101a061025e366004611782565b610b52565b6101a0600b5481565b61013361027a36600461171c565b610b6f565b60008581526005602052604090205485906001600160a01b031633146102c05760405162461bcd60e51b81526004016102b790611b1c565b60405180910390fd5b60008181526005602052604080822080546001600160a01b03191690555182917f7cc135e0cebb02c3480ae5d74d377283180a2601f8f644edf7987b009316c63a91a260408051610140810182526001600160a01b038581168252602080830188815260008486018181526060860189815242608088015260a087018d905260c0870183905260e08701839052610100870183905287518089018952600b81527f496e2070726f677265737300000000000000000000000000000000000000000081870152610120880152600d548352600c855296909120855181546001600160a01b03191695169490941784559051600184015551600283015592518051929391926103d392600385019201906114f5565b506080820151600482015560a0820151600582015560c0820151600682015560e08201516007820155610100820151600882015561012082015180516104239160098401916020909101906114f5565b5050600d80549150600061043683611d91565b9190505550505050505050565b61044c81610b52565b600a5550565b60008381526005602052604090205483906001600160a01b0316331461048a5760405162461bcd60e51b81526004016102b790611b1c565b60008181526005602052604080822080546001600160a01b03191690555182917f7cc135e0cebb02c3480ae5d74d377283180a2601f8f644edf7987b009316c63a91a26000828152600c602052604081206006810185905560058101549091906104f6906103e8611cb3565b82600101546105059190611b87565b9050816005015485111561055f57604080518082019091526003808252623bb4b760e91b602090920191825261053f9160098501916114f5565b50600182015461054f8683611cb3565b6105599190611cd2565b60028301555b816005015485101561059a57604080518082019091526004808252636c6f737360e01b60209092019182526105989160098501916114f5565b505b81600501548514156105d557604080518082019091526004808252636472617760e01b60209092019182526105d39160098501916114f5565b505b505050505050565b600c6020526000908152604090208054600182015460028301546003840180546001600160a01b0390941694929391929161061790611d3d565b80601f016020809104026020016040519081016040528092919081815260200182805461064390611d3d565b80156106905780601f1061066557610100808354040283529160200191610690565b820191906000526020600020905b81548152906001019060200180831161067357829003601f168201915b5050505050908060040154908060050154908060060154908060070154908060080154908060090180546106c390611d3d565b80601f01602080910402602001604051908101604052809291908181526020018280546106ef90611d3d565b801561073c5780601f106107115761010080835404028352916020019161073c565b820191906000526020600020905b81548152906001019060200180831161071f57829003601f168201915b505050505090508a565b60008061075d600a543063eb34764260e01b610d0a565b6000848152600c6020908152604091829020825180840184526006808252651b595d1a1bd960d21b82850152845180860190955284527f6d696e6d61780000000000000000000000000000000000000000000000000000928401929092529293506107ca91849190610d92565b6040805180820190915260068152651b585c9ad95d60d21b60208201526107f390839088610d92565b6040805180820190915260068152651cde5b589bdb60d21b602082015261081c90839087610d92565b6040805180820190915260048082527f66726f6d00000000000000000000000000000000000000000000000000000000602083015282015461085f918491610db5565b60408051808201909152600281527f746f000000000000000000000000000000000000000000000000000000000000602082015261089f90839042610db5565b60408051808201909152600581526418995d125960da1b60208201526108c790839086610db5565b600954600b546108e2916001600160a01b0316908490610dd3565b925050505b9392505050565b600080610905600a54306303f6b09260e01b610d0a565b9050610957604051806040016040528060068152602001651b595d1a1bd960d21b8152506040518060400160405280600581526020016471756f746560d81b81525083610d929092919063ffffffff16565b6040805180820190915260068152651b585c9ad95d60d21b602082015261098090829087610d92565b6040805180820190915260068152651cde5b589bdb60d21b60208201526109a990829086610d92565b60408051808201909152600a81527f696e766573746d656e740000000000000000000000000000000000000000000060208201526109e990829085610db5565b610a4b6040518060400160405280600681526020017f747261646572000000000000000000000000000000000000000000000000000081525033604051602001610a339190611972565b60408051601f19818403018152919052839190610ea2565b600954600b54610a66916001600160a01b0316908390610dd3565b95945050505050565b600080610a86600a54306316529dea60e01b610d0a565b9050610ad8604051806040016040528060068152602001651b595d1a1bd960d21b8152506040518060400160405280600581526020016471756f746560d81b81525083610d929092919063ffffffff16565b6040805180820190915260068152651b585c9ad95d60d21b6020820152610b0190829087610d92565b6040805180820190915260068152651cde5b589bdb60d21b6020820152610b2a90829086610d92565b60408051808201909152600581526418995d125960da1b6020820152610a4b90829085610db5565b80516000908290610b665750600092915050565b50506020015190565b60008581526005602052604090205485906001600160a01b03163314610ba75760405162461bcd60e51b81526004016102b790611b1c565b60008181526005602052604080822080546001600160a01b03191690555182917f7cc135e0cebb02c3480ae5d74d377283180a2601f8f644edf7987b009316c63a91a26000828152600c602052604081206006810187905560078101869055600881018590556005810154909190610c21906103e8611cb3565b8260010154610c309190611b87565b90508160050154871115610c8a57604080518082019091526003808252623bb4b760e91b6020909201918252610c6a9160098501916114f5565b506001820154610c7a8883611cb3565b610c849190611cd2565b60028301555b8160050154871015610cc557604080518082019091526004808252636c6f737360e01b6020909201918252610cc39160098501916114f5565b505b8160050154871415610d0057604080518082019091526004808252636472617760e01b6020909201918252610cfe9160098501916114f5565b505b5050505050505050565b610d486040805160a0810182526000808252602080830182905282840182905260608084018390528451808601909552845283015290608082015290565b610d866040805160a0810182526000808252602080830182905282840182905260608084018390528451808601909552845283015290608082015290565b610a6681868686610ec0565b6080830151610da19083610f54565b6080830151610db09082610f54565b505050565b6080830151610dc49083610f54565b6080830151610db09082610f6b565b600454600090610de4816001611b6f565b600455835160408086015160808701515191516000937f404299460000000000000000000000000000000000000000000000000000000093610e359386938493923092918a916001916024016119b2565b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff000000000000000000000000000000000000000000000000000000009093169290921790915290506108e286838684610f95565b6080830151610eb19083610f54565b6080830151610db090826110cc565b610efe6040805160a0810182526000808252602080830182905282840182905260608084018390528451808601909552845283015290608082015290565b610f0e85608001516101006110d9565b50508284526001600160a01b03821660208501527fffffffff0000000000000000000000000000000000000000000000000000000081166040850152835b949350505050565b610f618260038351611144565b610db08282611259565b67ffffffffffffffff811115610f8957610f858282611280565b5050565b610f8582600083611144565b60003084604051602001610faa929190611984565b60408051808303601f1901815282825280516020918201206000818152600590925291812080546001600160a01b0319166001600160a01b038a1617905590925082917fb5e6e01e79f91267dc17b4e6314d5d4d03593d2ceee0fbb452b750bd70ea5af99190a26002546040517f4000aea00000000000000000000000000000000000000000000000000000000081526001600160a01b0390911690634000aea09061105e90889087908790600401611a2f565b602060405180830381600087803b15801561107857600080fd5b505af115801561108c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110b0919061162a565b610f4c5760405162461bcd60e51b81526004016102b790611b0c565b610f618260028351611144565b6040805180820190915260608152600060208201526110f9602083611dbe565b1561112157611109602083611dbe565b611114906020611cd2565b61111e9083611b6f565b91505b506020808301829052604080518085526000815283019091019052815b92915050565b60178167ffffffffffffffff161161116f576111698360e0600585901b1683176112b5565b50505050565b60ff8167ffffffffffffffff16116111ad57611196836018611fe0600586901b16176112b5565b506111698367ffffffffffffffff831660016112da565b61ffff8167ffffffffffffffff16116111ec576111d5836019611fe0600586901b16176112b5565b506111698367ffffffffffffffff831660026112da565b63ffffffff8167ffffffffffffffff161161122d5761121683601a611fe0600586901b16176112b5565b506111698367ffffffffffffffff831660046112da565b61124283601b611fe0600586901b16176112b5565b506111698367ffffffffffffffff831660086112da565b6040805180820190915260608152600060208201526108e783846000015151848551611300565b61128b8260c26112b5565b50610f8582826040516020016112a19190611afe565b6040516020818303038152906040526110cc565b6040805180820190915260608152600060208201526108e783846000015151846113ea565b604080518082019091526060815260006020820152610f4c848560000151518585611446565b604080518082019091526060815260006020820152825182111561132357600080fd5b60208501516113328386611b6f565b11156113655761136585611355876020015187866113509190611b6f565b6114c7565b611360906002611cb3565b6114de565b6000808651805187602083010193508088870111156113845787860182525b505050602084015b602084106113c457805182526113a3602083611b6f565b91506113b0602082611b6f565b90506113bd602085611cd2565b935061138c565b51815160001960208690036101000a019081169019919091161790525083949350505050565b6040805180820190915260608152600060208201528360200151831061141f5761141f84856020015160026113609190611cb3565b83518051602085830101848153508085141561143c576001810182525b5093949350505050565b604080518082019091526060815260006020820152602085015161146a8584611b6f565b111561147e5761147e856113558685611b6f565b6000600161148e84610100611be3565b6114989190611cd2565b90508551838682010185831982511617815250805184870111156114bc5783860181525b509495945050505050565b6000818311156114d857508161113e565b50919050565b81516114ea83836110d9565b506111698382611259565b82805461150190611d3d565b90600052602060002090601f0160209004810192826115235760008555611569565b82601f1061153c57805160ff1916838001178555611569565b82800160010185558215611569579182015b8281111561156957825182559160200191906001019061154e565b50611575929150611579565b5090565b5b80821115611575576000815560010161157a565b60006115a161159c84611b48565b611b2c565b9050828152602081018484840111156115b957600080fd5b6115c4848285611d05565b509392505050565b803561113e81611e2a565b805161113e81611e41565b803561113e81611e49565b600082601f8301126115fd578081fd5b8135610f4c84826020860161158e565b60006020828403121561161e578081fd5b6108e7838284016115cc565b60006020828403121561163b578081fd5b6108e7838284016115d7565b60008060006060848603121561165b578182fd5b611667858386016115e2565b92506020611677868287016115e2565b9250506040611688868287016115e2565b9150509250925092565b600080600080600060a086880312156116a9578081fd5b6116b5878288016115e2565b945060206116c5888289016115e2565b94505060406116d6888289016115e2565b93505060606116e7888289016115cc565b925050608086013567ffffffffffffffff811115611703578182fd5b61170f888289016115ed565b9150509295509295909350565b600080600080600060a08688031215611733578081fd5b61173f878288016115e2565b9450602061174f888289016115e2565b9450506040611760888289016115e2565b9350506060611771888289016115e2565b925050608061170f888289016115e2565b600060208284031215611793578081fd5b8082013567ffffffffffffffff8111156117ab578182fd5b610f4c848285016115ed565b6000806000606084860312156117cb578283fd5b8284013567ffffffffffffffff8111156117e3578384fd5b6117ef868287016115ed565b935050602084013567ffffffffffffffff81111561180b578283fd5b611677868287016115ed565b600060208284031215611828578081fd5b6108e7838284016115e2565b61183d81611ce9565b82525050565b61183d61184f82611ce9565b611dac565b8061183d565b7fffffffff00000000000000000000000000000000000000000000000000000000811661183d565b600061188c825190565b8084526020840193506118a3818560208601611d11565b601f01601f19169290920192915050565b61183d61184f82611cfa565b60238152602081017f756e61626c6520746f207472616e73666572416e6443616c6c20746f206f726181527f636c650000000000000000000000000000000000000000000000000000000000602082015290505b60400190565b60288152602081017f536f75726365206d75737420626520746865206f7261636c65206f662074686581527f207265717565737400000000000000000000000000000000000000000000000060208201529050611914565b61197c8183611843565b601401919050565b61198e81846118b4565b60140161199b8183611854565b60200192915050565b6020810161113e8284611834565b61010081016119c1828b611834565b6119ce602083018a611854565b6119db6040830189611854565b6119e86060830188611834565b6119f5608083018761185a565b611a0260a0830186611854565b611a0f60c0830185611854565b81810360e0830152611a218184611882565b9a9950505050505050505050565b60608101611a3d8286611834565b611a4a6020830185611854565b8181036040830152610a668184611882565b6101408101611a6b828d611834565b611a78602083018c611854565b611a85604083018b611854565b8181036060830152611a97818a611882565b9050611aa66080830189611854565b611ab360a0830188611854565b611ac060c0830187611854565b611acd60e0830186611854565b611adb610100830185611854565b818103610120830152611aee8184611882565b9c9b505050505050505050505050565b6020810161113e8284611854565b6020808252810161113e816118c0565b6020808252810161113e8161191a565b6000611b3760405190565b9050611b438282611d64565b919050565b600067ffffffffffffffff821115611b6257611b62611e14565b601f19601f83011661199b565b60008219821115611b8257611b82611dd2565b500190565b600082611b9657611b96611de8565b500490565b80825b6001851115611bda57808604811115611bb957611bb9611dd2565b6001851615611bc757908102905b8002611bd38560011c90565b9450611b9e565b94509492505050565b60006108e76000198484600082611bfc575060016108e7565b81611c09575060006108e7565b8160018114611c1f5760028114611c2957611c56565b60019150506108e7565b60ff841115611c3a57611c3a611dd2565b8360020a915084821115611c5057611c50611dd2565b506108e7565b5060208310610133831016604e8410600b8410161715611c89575081810a83811115611c8457611c84611dd2565b6108e7565b611c968484846001611b9b565b92509050818404811115611cac57611cac611dd2565b0292915050565b6000816000190483118215151615611ccd57611ccd611dd2565b500290565b600082821015611ce457611ce4611dd2565b500390565b60006001600160a01b03821661113e565b600061113e82611ce9565b82818337506000910152565b60005b83811015611d2c578181015183820152602001611d14565b838111156111695750506000910152565b600281046001821680611d5157607f821691505b602082108114156114d8576114d8611dfe565b601f19601f830116810181811067ffffffffffffffff82111715611d8a57611d8a611e14565b6040525050565b6000600019821415611da557611da5611dd2565b5060010190565b600061113e82600061113e8260601b90565b600082611dcd57611dcd611de8565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b611e3381611ce9565b8114611e3e57600080fd5b50565b801515611e33565b80611e3356fea264697066735822122035f6cb9ea787097c98d3009aed03ca3c8f8f7eba4bbc28af3619cb1ced8948dc64736f6c63430008040033";

type MocktionConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MocktionConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Mocktion__factory extends ContractFactory {
  constructor(...args: MocktionConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Mocktion> {
    return super.deploy(overrides || {}) as Promise<Mocktion>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Mocktion {
    return super.attach(address) as Mocktion;
  }
  override connect(signer: Signer): Mocktion__factory {
    return super.connect(signer) as Mocktion__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MocktionInterface {
    return new utils.Interface(_abi) as MocktionInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Mocktion {
    return new Contract(address, _abi, signerOrProvider) as Mocktion;
  }
}
