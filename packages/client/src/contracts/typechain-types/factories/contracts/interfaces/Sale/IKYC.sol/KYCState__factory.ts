/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  KYCState,
  KYCStateInterface,
} from "../../../../../contracts/interfaces/Sale/IKYC.sol/KYCState";

const _abi = [
  {
    inputs: [],
    name: "ACCEPTED",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "FIRST_VALUE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "LAST_VALUE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "REJECTED",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60ac610039600b82828239805160001a60731461002c57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe730000000000000000000000000000000000000000301460806040526004361060515760003560e01c80633e9e70141460565780634324efd714606f578063672ee37514606f578063cb7390b7146056575b600080fd5b605d600081565b60405190815260200160405180910390f35b605d60018156fea2646970667358221220d27ed52e88f8080bd64efb5a89fa118c2f0911a4772434569aaabb934fe5590364736f6c63430008040033";

type KYCStateConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: KYCStateConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class KYCState__factory extends ContractFactory {
  constructor(...args: KYCStateConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<KYCState> {
    return super.deploy(overrides || {}) as Promise<KYCState>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): KYCState {
    return super.attach(address) as KYCState;
  }
  override connect(signer: Signer): KYCState__factory {
    return super.connect(signer) as KYCState__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): KYCStateInterface {
    return new utils.Interface(_abi) as KYCStateInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): KYCState {
    return new Contract(address, _abi, signerOrProvider) as KYCState;
  }
}
