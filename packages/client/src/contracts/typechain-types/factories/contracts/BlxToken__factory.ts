/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { BlxToken, BlxTokenInterface } from "../../contracts/BlxToken";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "addTrustedAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "isTrustedAddress",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isTrustedCaller",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name_",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "removeTrustedAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol_",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply_",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052662386f26fc100006007553480156200001c57600080fd5b506040518060400160405280600981526020016821262c103a37b5b2b760b91b8152506040518060400160405280600381526020016208498b60eb1b8152508160039080519060200190620000739291906200025b565b508051620000899060049060208401906200025b565b505050620000a6620000a0620000e260201b60201c565b620000e6565b620000b13362000138565b620000bc3062000138565b620000dc620000d36005546001600160a01b031690565b60075462000166565b62000415565b3390565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b620001426200022c565b6001600160a01b03166000908152600660205260409020805460ff19166001179055565b6001600160a01b038216620001985760405162461bcd60e51b81526004016200018f906200037e565b60405180910390fd5b8060026000828254620001ac91906200039d565b90915550506001600160a01b03821660009081526020819052604081208054839290620001db9084906200039d565b90915550506040516001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906200022090859062000390565b60405180910390a35050565b6005546001600160a01b03163314620002595760405162461bcd60e51b81526004016200018f9062000366565b565b8280546200026990620003b8565b90600052602060002090601f0160209004810192826200028d5760008555620002d8565b82601f10620002a857805160ff1916838001178555620002d8565b82800160010185558215620002d8579182015b82811115620002d8578251825591602001919060010190620002bb565b50620002e6929150620002ea565b5090565b5b80821115620002e65760008155600101620002eb565b60208082527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657291019081525b60200190565b601f8152602081017f45524332303a206d696e7420746f20746865207a65726f206164647265737300815290506200032d565b60208082528101620003788162000301565b92915050565b60208082528101620003788162000333565b8181526020810162000378565b60008219821115620003b357620003b3620003e9565b500190565b600281046001821680620003cd57607f821691505b60208210811415620003e357620003e3620003ff565b50919050565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052602260045260246000fd5b61115280620004256000396000f3fe608060405234801561001057600080fd5b50600436106101825760003560e01c80638da5cb5b116100d8578063af17dea61161008c578063f2fde38b11610066578063f2fde38b14610396578063f9f494ed146103a9578063fe621505146103bc57600080fd5b8063af17dea6146102e5578063dd62ed3e14610321578063e2b9e1861461035a57600080fd5b80639dc29fac116100bd5780639dc29fac146102ac578063a457c2d7146102bf578063a9059cbb146102d257600080fd5b80638da5cb5b1461028b57806395d89b41146102a457600080fd5b8063313ce5671161013a57806353c395811161011457806353c395811461024057806370a0823114610258578063715018a61461028157600080fd5b8063313ce56714610215578063324536eb14610224578063395093511461022d57600080fd5b8063095ea7b31161016b578063095ea7b3146101de57806318160ddd146101f157806323b872dd1461020257600080fd5b806306fdde03146101875780630848a136146101a5575b600080fd5b61018f6103cf565b60405161019c9190610f50565b60405180910390f35b6101d16101b3366004610a5e565b6001600160a01b031660009081526006602052604090205460ff1690565b60405161019c9190610f42565b6101d16101ec366004610afe565b610461565b6002545b60405161019c9190611021565b6101d1610210366004610ab3565b61047b565b600660405161019c919061102f565b6101f560075481565b6101d161023b366004610afe565b6104c6565b3360009081526006602052604090205460ff166101d1565b6101f5610266366004610a5e565b6001600160a01b031660009081526020819052604090205490565b610289610505565b005b6005546001600160a01b031660405161019c9190610f34565b61018f610519565b6102896102ba366004610afe565b610528565b6101d16102cd366004610afe565b610565565b6101d16102e0366004610afe565b6105c4565b61018f6040518060400160405280600381526020017f424c58000000000000000000000000000000000000000000000000000000000081525081565b6101f561032f366004610a7b565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b61018f6040518060400160405280600981526020017f424c5820746f6b656e000000000000000000000000000000000000000000000081525081565b6102896103a4366004610a5e565b610604565b6102896103b7366004610a5e565b61063e565b6102896103ca366004610a5e565b610667565b6060600380546103de906110a9565b80601f016020809104026020016040519081016040528092919081815260200182805461040a906110a9565b80156104575780601f1061042c57610100808354040283529160200191610457565b820191906000526020600020905b81548152906001019060200180831161043a57829003601f168201915b5050505050905090565b60003361046f818585610693565b60019150505b92915050565b3360009081526006602052604081205460ff166104b35760405162461bcd60e51b81526004016104aa90610fc1565b60405180910390fd5b6104be848484610747565b949350505050565b3360008181526001602090815260408083206001600160a01b038716845290915281205490919061046f908290869061050090879061103d565b610693565b61050d610760565b610517600061078a565b565b6060600480546103de906110a9565b3360009081526006602052604090205460ff166105575760405162461bcd60e51b81526004016104aa90610fc1565b61056182826107f4565b5050565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909190838110156105ac5760405162461bcd60e51b81526004016104aa90611011565b6105b98286868403610693565b506001949350505050565b3360009081526006602052604081205460ff166105f35760405162461bcd60e51b81526004016104aa90610fc1565b6105fd83836108c5565b9392505050565b61060c610760565b6001600160a01b0381166106325760405162461bcd60e51b81526004016104aa90610f81565b61063b8161078a565b50565b610646610760565b6001600160a01b03166000908152600660205260409020805460ff19169055565b61066f610760565b6001600160a01b03166000908152600660205260409020805460ff19166001179055565b6001600160a01b0383166106b95760405162461bcd60e51b81526004016104aa90611001565b6001600160a01b0382166106df5760405162461bcd60e51b81526004016104aa90610f91565b6001600160a01b0380841660008181526001602090815260408083209487168084529490915290819020849055517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259061073a908590611021565b60405180910390a3505050565b6000336107558582856108d3565b6105b9858585610935565b6005546001600160a01b031633146105175760405162461bcd60e51b81526004016104aa90610fd1565b600580546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b03821661081a5760405162461bcd60e51b81526004016104aa90610fe1565b6001600160a01b038216600090815260208190526040902054818110156108535760405162461bcd60e51b81526004016104aa90610f71565b6001600160a01b0383166000908152602081905260408120838303905560028054849290610882908490611055565b90915550506040516000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9061073a908690611021565b60003361046f818585610935565b6001600160a01b03838116600090815260016020908152604080832093861683529290522054600019811461092f57818110156109225760405162461bcd60e51b81526004016104aa90610fa1565b61092f8484848403610693565b50505050565b6001600160a01b03831661095b5760405162461bcd60e51b81526004016104aa90610ff1565b6001600160a01b0382166109815760405162461bcd60e51b81526004016104aa90610f61565b6001600160a01b038316600090815260208190526040902054818110156109ba5760405162461bcd60e51b81526004016104aa90610fb1565b6001600160a01b038085166000908152602081905260408082208585039055918516815290812080548492906109f190849061103d565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610a3b9190611021565b60405180910390a361092f565b803561047581611102565b803561047581611116565b600060208284031215610a6f578081fd5b6105fd83828401610a48565b60008060408385031215610a8d578081fd5b610a9984828501610a48565b91506020610aa985828601610a48565b9150509250929050565b600080600060608486031215610ac7578081fd5b610ad385828601610a48565b92506020610ae386828701610a48565b9250506040610af486828701610a53565b9150509250925092565b60008060408385031215610b10578182fd5b610b1c84838501610a48565b91506020610aa985828601610a53565b610b358161106c565b82525050565b801515610b35565b6000610b4d825190565b808452602084019350610b6481856020860161107d565b601f01601f19169290920192915050565b60238152602081017f45524332303a207472616e7366657220746f20746865207a65726f206164647281527f6573730000000000000000000000000000000000000000000000000000000000602082015290505b60400190565b60228152602081017f45524332303a206275726e20616d6f756e7420657863656564732062616c616e81527f636500000000000000000000000000000000000000000000000000000000000060208201529050610bc9565b60268152602081017f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206181527f646472657373000000000000000000000000000000000000000000000000000060208201529050610bc9565b60228152602081017f45524332303a20617070726f766520746f20746865207a65726f20616464726581527f737300000000000000000000000000000000000000000000000000000000000060208201529050610bc9565b601d8152602081017f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000815290505b60200190565b60268152602081017f45524332303a207472616e7366657220616d6f756e742065786365656473206281527f616c616e6365000000000000000000000000000000000000000000000000000060208201529050610bc9565b60198152602081017f41433a414444524553535f49535f4e4f545f545255535445440000000000000081529050610d05565b60208082527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65729101908152610d05565b60218152602081017f45524332303a206275726e2066726f6d20746865207a65726f2061646472657381527f730000000000000000000000000000000000000000000000000000000000000060208201529050610bc9565b60258152602081017f45524332303a207472616e736665722066726f6d20746865207a65726f20616481527f647265737300000000000000000000000000000000000000000000000000000060208201529050610bc9565b60248152602081017f45524332303a20617070726f76652066726f6d20746865207a65726f2061646481527f726573730000000000000000000000000000000000000000000000000000000060208201529050610bc9565b60258152602081017f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7781527f207a65726f00000000000000000000000000000000000000000000000000000060208201529050610bc9565b80610b35565b60ff8116610b35565b602081016104758284610b2c565b602081016104758284610b3b565b602080825281016105fd8184610b43565b6020808252810161047581610b75565b6020808252810161047581610bcf565b6020808252810161047581610c27565b6020808252810161047581610c7f565b6020808252810161047581610cd7565b6020808252810161047581610d0b565b6020808252810161047581610d63565b6020808252810161047581610d95565b6020808252810161047581610dc5565b6020808252810161047581610e1d565b6020808252810161047581610e75565b6020808252810161047581610ecd565b602081016104758284610f25565b602081016104758284610f2b565b60008219821115611050576110506110d6565b500190565b600082821015611067576110676110d6565b500390565b60006001600160a01b038216610475565b60005b83811015611098578181015183820152602001611080565b8381111561092f5750506000910152565b6002810460018216806110bd57607f821691505b602082108114156110d0576110d06110ec565b50919050565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052602260045260246000fd5b61110b8161106c565b811461063b57600080fd5b8061110b56fea26469706673582212202bd52c3d929f9e7557dbb90e16b507d1ec8299820ad890048073e826d069283864736f6c63430008040033";

type BlxTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BlxTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BlxToken__factory extends ContractFactory {
  constructor(...args: BlxTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<BlxToken> {
    return super.deploy(overrides || {}) as Promise<BlxToken>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): BlxToken {
    return super.attach(address) as BlxToken;
  }
  override connect(signer: Signer): BlxToken__factory {
    return super.connect(signer) as BlxToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BlxTokenInterface {
    return new utils.Interface(_abi) as BlxTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BlxToken {
    return new Contract(address, _abi, signerOrProvider) as BlxToken;
  }
}
