/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { BlxToken, BlxTokenInterface } from "../../contracts/BlxToken";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "addTrustedAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "isTrustedAddress",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isTrustedCaller",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name_",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "removeTrustedAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol_",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply_",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052662386f26fc100006007553480156200001c57600080fd5b506040518060400160405280600981526020016821262c103a37b5b2b760b91b8152506040518060400160405280600381526020016208498b60eb1b8152508160039080519060200190620000739291906200025b565b508051620000899060049060208401906200025b565b505050620000a6620000a0620000e260201b60201c565b620000e6565b620000b13362000138565b620000bc3062000138565b620000dc620000d36005546001600160a01b031690565b60075462000166565b62000415565b3390565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b620001426200022c565b6001600160a01b03166000908152600660205260409020805460ff19166001179055565b6001600160a01b038216620001985760405162461bcd60e51b81526004016200018f906200037e565b60405180910390fd5b8060026000828254620001ac91906200039d565b90915550506001600160a01b03821660009081526020819052604081208054839290620001db9084906200039d565b90915550506040516001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906200022090859062000390565b60405180910390a35050565b6005546001600160a01b03163314620002595760405162461bcd60e51b81526004016200018f9062000366565b565b8280546200026990620003b8565b90600052602060002090601f0160209004810192826200028d5760008555620002d8565b82601f10620002a857805160ff1916838001178555620002d8565b82800160010185558215620002d8579182015b82811115620002d8578251825591602001919060010190620002bb565b50620002e6929150620002ea565b5090565b5b80821115620002e65760008155600101620002eb565b60208082527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657291019081525b60200190565b601f8152602081017f45524332303a206d696e7420746f20746865207a65726f206164647265737300815290506200032d565b60208082528101620003788162000301565b92915050565b60208082528101620003788162000333565b8181526020810162000378565b60008219821115620003b357620003b3620003e9565b500190565b600281046001821680620003cd57607f821691505b60208210811415620003e357620003e3620003ff565b50919050565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052602260045260246000fd5b61115880620004256000396000f3fe608060405234801561001057600080fd5b50600436106101825760003560e01c80638da5cb5b116100d8578063af17dea61161008c578063f2fde38b11610066578063f2fde38b1461036d578063f9f494ed14610380578063fe6215051461039357600080fd5b8063af17dea6146102bc578063dd62ed3e146102f8578063e2b9e1861461033157600080fd5b80639dc29fac116100bd5780639dc29fac14610283578063a457c2d714610296578063a9059cbb146102a957600080fd5b80638da5cb5b1461026257806395d89b411461027b57600080fd5b8063313ce5671161013a57806353c395811161011457806353c395811461022757806370a082311461022f578063715018a61461025857600080fd5b8063313ce567146101fc578063324536eb1461020b578063395093511461021457600080fd5b8063095ea7b31161016b578063095ea7b3146101c557806318160ddd146101d857806323b872dd146101e957600080fd5b806306fdde03146101875780630848a136146101a5575b600080fd5b61018f6103a6565b60405161019c9190610f56565b60405180910390f35b6101b86101b3366004610a64565b610438565b60405161019c9190610f48565b6101b86101d3366004610b04565b610464565b6002545b60405161019c9190611027565b6101b86101f7366004610ab9565b61047c565b600660405161019c9190611035565b6101dc60075481565b6101b8610222366004610b04565b6104be565b6101b86104fd565b6101dc61023d366004610a64565b6001600160a01b031660009081526020819052604090205490565b61026061051f565b005b6005546001600160a01b031660405161019c9190610f3a565b61018f610533565b610260610291366004610b04565b610542565b6101b86102a4366004610b04565b610574565b6101b86102b7366004610b04565b6105d3565b61018f6040518060400160405280600381526020017f424c58000000000000000000000000000000000000000000000000000000000081525081565b6101dc610306366004610a81565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b61018f6040518060400160405280600981526020017f424c5820746f6b656e000000000000000000000000000000000000000000000081525081565b61026061037b366004610a64565b61060a565b61026061038e366004610a64565b610644565b6102606103a1366004610a64565b61066d565b6060600380546103b5906110af565b80601f01602080910402602001604051908101604052809291908181526020018280546103e1906110af565b801561042e5780601f106104035761010080835404028352916020019161042e565b820191906000526020600020905b81548152906001019060200180831161041157829003601f168201915b5050505050905090565b6001600160a01b03811660009081526006602052604081205460ff168061045e57503330145b92915050565b600033610472818585610699565b5060019392505050565b60006104866104fd565b6104ab5760405162461bcd60e51b81526004016104a290610fc7565b60405180910390fd5b6104b684848461074d565b949350505050565b3360008181526001602090815260408083206001600160a01b038716845290915281205490919061047290829086906104f8908790611043565b610699565b3360009081526006602052604081205460ff168061051a57503330145b905090565b610527610766565b6105316000610790565b565b6060600480546103b5906110af565b61054a6104fd565b6105665760405162461bcd60e51b81526004016104a290610fc7565b61057082826107fa565b5050565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909190838110156105bb5760405162461bcd60e51b81526004016104a290611017565b6105c88286868403610699565b506001949350505050565b60006105dd6104fd565b6105f95760405162461bcd60e51b81526004016104a290610fc7565b61060383836108cb565b9392505050565b610612610766565b6001600160a01b0381166106385760405162461bcd60e51b81526004016104a290610f87565b61064181610790565b50565b61064c610766565b6001600160a01b03166000908152600660205260409020805460ff19169055565b610675610766565b6001600160a01b03166000908152600660205260409020805460ff19166001179055565b6001600160a01b0383166106bf5760405162461bcd60e51b81526004016104a290611007565b6001600160a01b0382166106e55760405162461bcd60e51b81526004016104a290610f97565b6001600160a01b0380841660008181526001602090815260408083209487168084529490915290819020849055517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92590610740908590611027565b60405180910390a3505050565b60003361075b8582856108d9565b6105c885858561093b565b6005546001600160a01b031633146105315760405162461bcd60e51b81526004016104a290610fd7565b600580546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b0382166108205760405162461bcd60e51b81526004016104a290610fe7565b6001600160a01b038216600090815260208190526040902054818110156108595760405162461bcd60e51b81526004016104a290610f77565b6001600160a01b038316600090815260208190526040812083830390556002805484929061088890849061105b565b90915550506040516000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610740908690611027565b60003361047281858561093b565b6001600160a01b03838116600090815260016020908152604080832093861683529290522054600019811461093557818110156109285760405162461bcd60e51b81526004016104a290610fa7565b6109358484848403610699565b50505050565b6001600160a01b0383166109615760405162461bcd60e51b81526004016104a290610ff7565b6001600160a01b0382166109875760405162461bcd60e51b81526004016104a290610f67565b6001600160a01b038316600090815260208190526040902054818110156109c05760405162461bcd60e51b81526004016104a290610fb7565b6001600160a01b038085166000908152602081905260408082208585039055918516815290812080548492906109f7908490611043565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610a419190611027565b60405180910390a3610935565b803561045e81611108565b803561045e8161111c565b600060208284031215610a75578081fd5b61060383828401610a4e565b60008060408385031215610a93578081fd5b610a9f84828501610a4e565b91506020610aaf85828601610a4e565b9150509250929050565b600080600060608486031215610acd578081fd5b610ad985828601610a4e565b92506020610ae986828701610a4e565b9250506040610afa86828701610a59565b9150509250925092565b60008060408385031215610b16578182fd5b610b2284838501610a4e565b91506020610aaf85828601610a59565b610b3b81611072565b82525050565b801515610b3b565b6000610b53825190565b808452602084019350610b6a818560208601611083565b601f01601f19169290920192915050565b60238152602081017f45524332303a207472616e7366657220746f20746865207a65726f206164647281527f6573730000000000000000000000000000000000000000000000000000000000602082015290505b60400190565b60228152602081017f45524332303a206275726e20616d6f756e7420657863656564732062616c616e81527f636500000000000000000000000000000000000000000000000000000000000060208201529050610bcf565b60268152602081017f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206181527f646472657373000000000000000000000000000000000000000000000000000060208201529050610bcf565b60228152602081017f45524332303a20617070726f766520746f20746865207a65726f20616464726581527f737300000000000000000000000000000000000000000000000000000000000060208201529050610bcf565b601d8152602081017f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000815290505b60200190565b60268152602081017f45524332303a207472616e7366657220616d6f756e742065786365656473206281527f616c616e6365000000000000000000000000000000000000000000000000000060208201529050610bcf565b60198152602081017f41433a414444524553535f49535f4e4f545f545255535445440000000000000081529050610d0b565b60208082527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65729101908152610d0b565b60218152602081017f45524332303a206275726e2066726f6d20746865207a65726f2061646472657381527f730000000000000000000000000000000000000000000000000000000000000060208201529050610bcf565b60258152602081017f45524332303a207472616e736665722066726f6d20746865207a65726f20616481527f647265737300000000000000000000000000000000000000000000000000000060208201529050610bcf565b60248152602081017f45524332303a20617070726f76652066726f6d20746865207a65726f2061646481527f726573730000000000000000000000000000000000000000000000000000000060208201529050610bcf565b60258152602081017f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7781527f207a65726f00000000000000000000000000000000000000000000000000000060208201529050610bcf565b80610b3b565b60ff8116610b3b565b6020810161045e8284610b32565b6020810161045e8284610b41565b602080825281016106038184610b49565b6020808252810161045e81610b7b565b6020808252810161045e81610bd5565b6020808252810161045e81610c2d565b6020808252810161045e81610c85565b6020808252810161045e81610cdd565b6020808252810161045e81610d11565b6020808252810161045e81610d69565b6020808252810161045e81610d9b565b6020808252810161045e81610dcb565b6020808252810161045e81610e23565b6020808252810161045e81610e7b565b6020808252810161045e81610ed3565b6020810161045e8284610f2b565b6020810161045e8284610f31565b60008219821115611056576110566110dc565b500190565b60008282101561106d5761106d6110dc565b500390565b60006001600160a01b03821661045e565b60005b8381101561109e578181015183820152602001611086565b838111156109355750506000910152565b6002810460018216806110c357607f821691505b602082108114156110d6576110d66110f2565b50919050565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052602260045260246000fd5b61111181611072565b811461064157600080fd5b8061111156fea2646970667358221220e9d2922e665ac515471f40ad9b7b14c08a91e47c1508f27d71a9c604c1939a6264736f6c63430008040033";

type BlxTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BlxTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BlxToken__factory extends ContractFactory {
  constructor(...args: BlxTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<BlxToken> {
    return super.deploy(overrides || {}) as Promise<BlxToken>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): BlxToken {
    return super.attach(address) as BlxToken;
  }
  override connect(signer: Signer): BlxToken__factory {
    return super.connect(signer) as BlxToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BlxTokenInterface {
    return new utils.Interface(_abi) as BlxTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BlxToken {
    return new Contract(address, _abi, signerOrProvider) as BlxToken;
  }
}
