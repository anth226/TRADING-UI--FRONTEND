/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { USDC, USDCInterface } from "../../contracts/USDC";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addressOwner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200115d3803806200115d8339810160408190526200003491620001f4565b8151829082906200004d906003906020850190620000de565b50805162000063906004906020840190620000de565b505050620000806200007a6200008860201b60201c565b6200008c565b50506200036e565b3390565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b828054620000ec90620002e2565b90600052602060002090601f0160209004810192826200011057600085556200015b565b82601f106200012b57805160ff19168380011785556200015b565b828001600101855582156200015b579182015b828111156200015b5782518255916020019190600101906200013e565b50620001699291506200016d565b5090565b5b808211156200016957600081556001016200016e565b60006200019b620001958462000282565b62000263565b905082815260208101848484011115620001b457600080fd5b620001c1848285620002af565b509392505050565b600082601f830112620001da578081fd5b8151620001ec84826020860162000184565b949350505050565b6000806040838503121562000207578182fd5b828201516001600160401b038111156200021f578283fd5b6200022d85828601620001c9565b602085015190935090506001600160401b038111156200024b578182fd5b6200025985828601620001c9565b9150509250929050565b60006200026f60405190565b90506200027d828262000313565b919050565b60006001600160401b038211156200029e576200029e62000358565b601f19601f83011660200192915050565b60005b83811015620002cc578181015183820152602001620002b2565b83811115620002dc576000848401525b50505050565b600281046001821680620002f757607f821691505b602082108114156200030d576200030d62000342565b50919050565b601f19601f83011681016001600160401b03811182821017156200033b576200033b62000358565b6040525050565b634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b610ddf806200037e6000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c806370a0823111610097578063a457c2d711610066578063a457c2d7146101e5578063a9059cbb146101f8578063dd62ed3e1461020b578063f2fde38b1461024457600080fd5b806370a0823114610193578063715018a6146101bc5780638da5cb5b146101c457806395d89b41146101dd57600080fd5b806323b872dd116100d357806323b872dd14610149578063313ce5671461015c578063395093511461016b57806340c10f191461017e57600080fd5b806306fdde03146100fa578063095ea7b31461011857806318160ddd14610138575b600080fd5b610102610257565b60405161010f9190610c14565b60405180910390f35b61012b610126366004610872565b6102e9565b60405161010f9190610c06565b6002545b60405161010f9190610cc5565b61012b610157366004610827565b610303565b600660405161010f9190610cd3565b61012b610179366004610872565b610327565b61019161018c366004610872565b610366565b005b61013c6101a13660046107cb565b6001600160a01b031660009081526020819052604090205490565b61019161037c565b6005546001600160a01b031660405161010f9190610bf8565b610102610390565b61012b6101f3366004610872565b61039f565b61012b610206366004610872565b6103fc565b61013c6102193660046107ef565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6101916102523660046107cb565b61040a565b60606003805461026690610d36565b80601f016020809104026020016040519081016040528092919081815260200182805461029290610d36565b80156102df5780601f106102b4576101008083540402835291602001916102df565b820191906000526020600020905b8154815290600101906020018083116102c257829003601f168201915b5050505050905090565b6000336102f7818585610444565b60019150505b92915050565b6000336103118582856104f8565b61031c85858561055a565b506001949350505050565b3360008181526001602090815260408083206001600160a01b03871684529091528120549091906102f79082908690610361908790610ce1565b610444565b61036e61066d565b6103788282610697565b5050565b61038461066d565b61038e600061074b565b565b60606004805461026690610d36565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909190838110156103ef5760405162461bcd60e51b81526004016103e690610ca5565b60405180910390fd5b61031c8286868403610444565b6000336102f781858561055a565b61041261066d565b6001600160a01b0381166104385760405162461bcd60e51b81526004016103e690610c35565b6104418161074b565b50565b6001600160a01b03831661046a5760405162461bcd60e51b81526004016103e690610c95565b6001600160a01b0382166104905760405162461bcd60e51b81526004016103e690610c45565b6001600160a01b0380841660008181526001602090815260408083209487168084529490915290819020849055517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906104eb908590610cc5565b60405180910390a3505050565b6001600160a01b03838116600090815260016020908152604080832093861683529290522054600019811461055457818110156105475760405162461bcd60e51b81526004016103e690610c55565b6105548484848403610444565b50505050565b6001600160a01b0383166105805760405162461bcd60e51b81526004016103e690610c85565b6001600160a01b0382166105a65760405162461bcd60e51b81526004016103e690610c25565b6001600160a01b038316600090815260208190526040902054818110156105df5760405162461bcd60e51b81526004016103e690610c65565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290610616908490610ce1565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516106609190610cc5565b60405180910390a3610554565b6005546001600160a01b0316331461038e5760405162461bcd60e51b81526004016103e690610c75565b6001600160a01b0382166106bd5760405162461bcd60e51b81526004016103e690610cb5565b80600260008282546106cf9190610ce1565b90915550506001600160a01b038216600090815260208190526040812080548392906106fc908490610ce1565b90915550506040516001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9061073f908590610cc5565b60405180910390a35050565b600580546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b80356102fd81610d8f565b80356102fd81610da3565b6000602082840312156107dc578081fd5b6107e8838284016107b5565b9392505050565b60008060408385031215610801578081fd5b61080d848285016107b5565b9150602061081d858286016107b5565b9150509250929050565b60008060006060848603121561083b578081fd5b610847858286016107b5565b92506020610857868287016107b5565b9250506040610868868287016107c0565b9150509250925092565b60008060408385031215610884578182fd5b610890848385016107b5565b9150602061081d858286016107c0565b6108a981610cf9565b82525050565b8015156108a9565b60006108c1825190565b8084526020840193506108d8818560208601610d0a565b601f01601f19169290920192915050565b60238152602081017f45524332303a207472616e7366657220746f20746865207a65726f206164647281527f6573730000000000000000000000000000000000000000000000000000000000602082015290505b60400190565b60268152602081017f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206181527f64647265737300000000000000000000000000000000000000000000000000006020820152905061093d565b60228152602081017f45524332303a20617070726f766520746f20746865207a65726f20616464726581527f73730000000000000000000000000000000000000000000000000000000000006020820152905061093d565b601d8152602081017f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000815290505b60200190565b60268152602081017f45524332303a207472616e7366657220616d6f756e742065786365656473206281527f616c616e636500000000000000000000000000000000000000000000000000006020820152905061093d565b60208082527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65729101908152610a21565b60258152602081017f45524332303a207472616e736665722066726f6d20746865207a65726f20616481527f64726573730000000000000000000000000000000000000000000000000000006020820152905061093d565b60248152602081017f45524332303a20617070726f76652066726f6d20746865207a65726f2061646481527f72657373000000000000000000000000000000000000000000000000000000006020820152905061093d565b60258152602081017f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7781527f207a65726f0000000000000000000000000000000000000000000000000000006020820152905061093d565b601f8152602081017f45524332303a206d696e7420746f20746865207a65726f20616464726573730081529050610a21565b806108a9565b60ff81166108a9565b602081016102fd82846108a0565b602081016102fd82846108af565b602080825281016107e881846108b7565b602080825281016102fd816108e9565b602080825281016102fd81610943565b602080825281016102fd8161099b565b602080825281016102fd816109f3565b602080825281016102fd81610a27565b602080825281016102fd81610a7f565b602080825281016102fd81610aaf565b602080825281016102fd81610b07565b602080825281016102fd81610b5f565b602080825281016102fd81610bb7565b602081016102fd8284610be9565b602081016102fd8284610bef565b60008219821115610cf457610cf4610d63565b500190565b60006001600160a01b0382166102fd565b60005b83811015610d25578181015183820152602001610d0d565b838111156105545750506000910152565b600281046001821680610d4a57607f821691505b60208210811415610d5d57610d5d610d79565b50919050565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052602260045260246000fd5b610d9881610cf9565b811461044157600080fd5b80610d9856fea2646970667358221220c6ceac28085aac5af9d3cfafeaaadd397df2693dff1bda20cd44285c3872e2bd64736f6c63430008040033";

type USDCConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: USDCConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class USDC__factory extends ContractFactory {
  constructor(...args: USDCConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    name_: PromiseOrValue<string>,
    symbol_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<USDC> {
    return super.deploy(name_, symbol_, overrides || {}) as Promise<USDC>;
  }
  override getDeployTransaction(
    name_: PromiseOrValue<string>,
    symbol_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(name_, symbol_, overrides || {});
  }
  override attach(address: string): USDC {
    return super.attach(address) as USDC;
  }
  override connect(signer: Signer): USDC__factory {
    return super.connect(signer) as USDC__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): USDCInterface {
    return new utils.Interface(_abi) as USDCInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): USDC {
    return new Contract(address, _abi, signerOrProvider) as USDC;
  }
}
