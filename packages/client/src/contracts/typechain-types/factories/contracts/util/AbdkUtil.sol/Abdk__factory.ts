/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  Abdk,
  AbdkInterface,
} from "../../../../contracts/util/AbdkUtil.sol/Abdk";

const _abi = [
  {
    inputs: [],
    name: "_0_5",
    outputs: [
      {
        internalType: "int128",
        name: "",
        type: "int128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_1",
    outputs: [
      {
        internalType: "int128",
        name: "",
        type: "int128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_10",
    outputs: [
      {
        internalType: "int128",
        name: "",
        type: "int128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_100",
    outputs: [
      {
        internalType: "int128",
        name: "",
        type: "int128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_1000",
    outputs: [
      {
        internalType: "int128",
        name: "",
        type: "int128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_2",
    outputs: [
      {
        internalType: "int128",
        name: "",
        type: "int128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_3",
    outputs: [
      {
        internalType: "int128",
        name: "",
        type: "int128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_4",
    outputs: [
      {
        internalType: "int128",
        name: "",
        type: "int128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_6",
    outputs: [
      {
        internalType: "int128",
        name: "",
        type: "int128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_64",
    outputs: [
      {
        internalType: "int128",
        name: "",
        type: "int128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_8",
    outputs: [
      {
        internalType: "int128",
        name: "",
        type: "int128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x6101f861003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100d35760003560e01c8063967c36ff1161008b578063b11c591a11610065578063b11c591a1461016f578063b9a40f291461017f578063c57d71851461018f57600080fd5b8063967c36ff1461013f578063ac7fd4881461014f578063ad94f8bc1461015f57600080fd5b8063551d28c2116100bc578063551d28c21461010e57806361e43d3e1461011e5780636d4a6e7b1461012f57600080fd5b80633684838b146100d857806344495455146100fe575b600080fd5b6100e86840000000000000000081565b6040516100f591906101ae565b60405180910390f35b6100e86804000000000000000081565b6100e86806000000000000000081565b6100e86903e8000000000000000081565b6100e86864000000000000000081565b6100e8680a000000000000000081565b6100e86802000000000000000081565b6100e86801000000000000000081565b6100e86803000000000000000081565b6100e86808000000000000000081565b6100e867800000000000000081565b6101a881600f0b90565b82525050565b602081016101bc828461019e565b9291505056fea2646970667358221220d487defe5848ed419216621a2413bbf12758cd216129187a89712457c7e074ce64736f6c63430008040033";

type AbdkConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AbdkConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Abdk__factory extends ContractFactory {
  constructor(...args: AbdkConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Abdk> {
    return super.deploy(overrides || {}) as Promise<Abdk>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Abdk {
    return super.attach(address) as Abdk;
  }
  override connect(signer: Signer): Abdk__factory {
    return super.connect(signer) as Abdk__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AbdkInterface {
    return new utils.Interface(_abi) as AbdkInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Abdk {
    return new Contract(address, _abi, signerOrProvider) as Abdk;
  }
}
